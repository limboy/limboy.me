<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
      <title>Limboy</title>
        <link>https://limboy.me</link>
        <description></description>
        <generator>Zola</generator>
        <language>zh</language>
        <atom:link href="https://limboy.me/index.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Fri, 25 Mar 2022 00:00:00 +0000</lastBuildDate>
        
        <item>
            <title>我的 Logseq 使用习惯</title>
            <pubDate>Fri, 25 Mar 2022 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/logseq/</link>
            <guid>https://limboy.me/posts/logseq/</guid>
            <description>&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;logseq.com&#x2F;&quot;&gt;Logseq&lt;&#x2F;a&gt; 是有一次在跟 &lt;a href=&quot;https:&#x2F;&#x2F;lutaonan.com&#x2F;&quot;&gt;Randy&lt;&#x2F;a&gt; 聊天时，他提到最近用得比较多的笔记工具。试用了之后，就被吸引了。经过一段时间摸索，找到了比较舒服的使用姿势，跟大家分享下。&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot; &gt;
  &lt;strong&gt;PS:&lt;&#x2F;strong&gt; &lt;a href=&quot;https:&#x2F;&#x2F;bytetalk.fm&quot;&gt;Bytetalk&lt;&#x2F;a&gt; 有一期&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;61c6cccac525309a443b5b36&quot;&gt;跟 Logseq 创始人的访谈播客&lt;&#x2F;a&gt;，感兴趣的话可以听一下&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;PPS:&lt;&#x2F;strong&gt; Randy 做过一个&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=DxoGJBb1mWQ&quot;&gt;视频&lt;&#x2F;a&gt;，分享了他&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;randyloop&#x2F;status&#x2F;1501588790988918784?s=20&amp;amp;t=W_yXlH6y6i-xoL08uhZE9g&quot;&gt;使用 Logseq 的一些经验&lt;&#x2F;a&gt;
&lt;&#x2F;aside&gt;&lt;h2 id=&quot;logseq-shi-shi-yao&quot;&gt;Logseq 是什么&lt;&#x2F;h2&gt;
&lt;p&gt;Logseq 是一个以 Outline 为组织形式，以 Block 为核心，支持双向链接和灵活查询的笔记工具。由于它的强大和灵活，很多人（包括我）都用它来 Organize Life。&lt;&#x2F;p&gt;
&lt;p&gt;相比于其他的笔记工具，Logseq 的独特点有：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;极低的记录门槛&lt;&#x2F;strong&gt;。每天会自动新建 Journal，然后直接写就行了。Outline 模式也让输入变得非常轻量。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;强大的查询能力&lt;&#x2F;strong&gt;。基于 Outline 组织模式的笔记工具，如果欠缺聚合能力，就容易出现孤岛，Logseq 内置了 Simple Query 和 Advanced Query 两种模式，可以很好地按需聚合内容。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;开源&lt;&#x2F;strong&gt;。开源给人一种安心感，也能体现创作者对代码的信心。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;免费&lt;&#x2F;strong&gt;。嗯，这个理由很充分了···&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Local Data&lt;&#x2F;strong&gt;。数据存在本地，不用担心数据泄露或者被用来作为大数据的训练集，也能让 App 的体验更流畅（相比 Online Service，如 Roam Research）。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Markdown&lt;&#x2F;strong&gt;。没有使用私有格式，其他工具也能打开&#x2F;浏览文件内容，也方便对数据做二次开发。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;活跃的社区&lt;&#x2F;strong&gt;。不用担心没人用，导致停止开发，遇到问题也能愉快地交流。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;aside class=&quot;info&quot; &gt;
  &lt;strong&gt;PS:&lt;&#x2F;strong&gt; Logseq 的部分投资人也是 Logseq 的重度用户，甚至会写 Logseq 的插件
&lt;&#x2F;aside&gt;
&lt;p&gt;当然槽点也是有的，比如设计上还不够精细，文档也有待完善，Advanced Query 虽然很好用，但门槛也很高。&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot; &gt;
  以天为单位来录入内容的另一好处是方便回顾，如果想知道哪天做了哪些事，打开当天的页面就能了解大概。
&lt;&#x2F;aside&gt;
&lt;p&gt;Logseq 使用起来很自由，但如果缺少规范也容易迷失，无法发挥最大威力，下面就来聊聊我的一些使用经验，仅供参考。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;yi-xie-gai-nian&quot;&gt;一些概念&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;block&quot;&gt;Block&lt;&#x2F;h3&gt;
&lt;p&gt;Block 是 Logseq 中很重要的一个概念，随便在里面输入一段话，这段话就是一个 Block。Block 可以有 Parent 和 Children&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 每一行都是 Block
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 缩进后会成为 Child Block
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 点击左边的小圆点可以进入到 Block 内页
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 也可以折叠和展开
&lt;&#x2F;span&gt;&lt;span&gt;• &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;Logseq 是一个不错的笔记工具
&lt;&#x2F;span&gt;&lt;span&gt;  • &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;开源且免费
&lt;&#x2F;span&gt;&lt;span&gt;  • &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;使用方便
&lt;&#x2F;span&gt;&lt;span&gt;  • &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;page&quot;&gt;Page&lt;&#x2F;h3&gt;
&lt;p&gt;如果只有 Block，那这些 Block 之间就很难建立关联，Page 可以解决这个问题（Tag 也可以）。只要在一段文字的前后加入两个中括号就行&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; Logseq 会自动成为一个 Page，title 就是 Logseq
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 点击进去后还能看到 Back Link，也就是这个 Block
&lt;&#x2F;span&gt;&lt;span&gt;[[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;Logseq&lt;&#x2F;span&gt;&lt;span&gt;]] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;最近的一些更新
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;tag&quot;&gt;Tag&lt;&#x2F;h3&gt;
&lt;p&gt;跟 Page 类似，Tag 也可以达到聚合 Block 的效果，只要在前面加上 &lt;code&gt;#&lt;&#x2F;code&gt;。既然两者效果类似，那使用场景有什么区别呢？我的习惯是：如果是一段语句的组成部分就用 Page，其他场景就用 Tag（因为 Tag 无法处理空格，所以我更习惯用 &lt;code&gt;#[[Tag]]&lt;&#x2F;code&gt; 这种形式）。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f9f9f9;color:#111111;&quot;&gt;&lt;code&gt;&lt;span&gt;Logseq 的 advanced query 学起来好累啊 #Thoughts
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;写一篇 [[关于 Logseq]] 的文章
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;back-link&quot;&gt;Back Link&lt;&#x2F;h3&gt;
&lt;p&gt;所有有 Tag 或 Page 的 Block 都会被聚合在一起，同时还会带上日期，这个非常方便。&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;backlink.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;backlink.jpg 561w,&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;backlink.jpg 561w&quot;
    sizes=&quot;(max-width: 561px) 100vw, 561px&quot; width=&quot;561&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;h3 id=&quot;properties&quot;&gt;Properties&lt;&#x2F;h3&gt;
&lt;p&gt;Page 和 Block 都可以有自己的属性，对于 Page 来说，第一行如果是 &lt;code&gt;XXX::YYY&lt;&#x2F;code&gt; 这样的形式就会被认为是该页面的属性，对于 Block 则是下一个缩进行。&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;properties.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;properties.jpg 249w,&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;properties.jpg 249w&quot;
    sizes=&quot;(max-width: 249px) 100vw, 249px&quot; width=&quot;249&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;上图中，&lt;code&gt;关于个人笔记&lt;&#x2F;code&gt;这个页面就有一个 &lt;code&gt;is&lt;&#x2F;code&gt; 的属性，该属性的 value 是 &lt;code&gt;[[Blog]]&lt;&#x2F;code&gt;。结合 Advanced Query 可以实现一些很方便的效果。&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot; &gt;
  给页面加属性毕竟是一件有成本的事情，我会对持续多天的页面（通常是一个领域或项目）的内容加上属性，对于像 &lt;code&gt;#Pearls&lt;&#x2F;code&gt; 这些不那么重要的内容就只是加 Tag
&lt;&#x2F;aside&gt;&lt;h3 id=&quot;simple-query&quot;&gt;Simple Query&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;logseq.github.io&#x2F;#&#x2F;page&#x2F;queries&quot;&gt;Simple Query&lt;&#x2F;a&gt; 比较容易理解，但能力也有限，格式为 &lt;code&gt;{{query (some query detail here)}}&lt;&#x2F;code&gt;，常用的有：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;clojure&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-clojure &quot;&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span&gt;{{query &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;#tag&lt;&#x2F;span&gt;&lt;span&gt;}}
&lt;&#x2F;span&gt;&lt;span&gt;{{query [[page]]}}
&lt;&#x2F;span&gt;&lt;span&gt;{{query &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;quot;full-text search&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}}
&lt;&#x2F;span&gt;&lt;span&gt;{{query (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;[[project]] (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;task&lt;&#x2F;span&gt;&lt;span&gt; NOW LATER))}}
&lt;&#x2F;span&gt;&lt;span&gt;{{query (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span&gt;[[page &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]] [[page &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;]])}}
&lt;&#x2F;span&gt;&lt;span&gt;{{query (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;between&lt;&#x2F;span&gt;&lt;span&gt; -7d +7d) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;task&lt;&#x2F;span&gt;&lt;span&gt; DONE))}}
&lt;&#x2F;span&gt;&lt;span&gt;{{query (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;property&lt;&#x2F;span&gt;&lt;span&gt; key value)}}
&lt;&#x2F;span&gt;&lt;span&gt;{{query (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;page-tags &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;#tag&lt;&#x2F;span&gt;&lt;span&gt;)}}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;advanced-query&quot;&gt;Advanced Query&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.logseq.com&#x2F;#&#x2F;page&#x2F;advanced%20queries&quot;&gt;Advanced Query&lt;&#x2F;a&gt; 会更复杂，但能力也更强，格式如下：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;clojure&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-clojure &quot;&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span&gt;{:title  [:h2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;quot;Your query title&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt; :query  [:find (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;pull&lt;&#x2F;span&gt;&lt;span&gt; ?b [*])
&lt;&#x2F;span&gt;&lt;span&gt;          :where ...]
&lt;&#x2F;span&gt;&lt;span&gt; :inputs [...]
&lt;&#x2F;span&gt;&lt;span&gt; :view             (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span&gt;[query-result] [:div ...])
&lt;&#x2F;span&gt;&lt;span&gt; :result-transform (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span&gt;[query-result] ...)
&lt;&#x2F;span&gt;&lt;span&gt; :collapsed? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这些是 &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Datalog&quot;&gt;Datalog&lt;&#x2F;a&gt; 的语法，具体解释可见&lt;a href=&quot;https:&#x2F;&#x2F;docs.datomic.com&#x2F;on-prem&#x2F;query&#x2F;query.html&quot;&gt;这篇文章&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-yong-yao-dian&quot;&gt;使用要点&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;biao-qian-he-shu-xing-de-xuan-ze&quot;&gt;标签和属性的选择&lt;&#x2F;h3&gt;
&lt;p&gt;通常出于便利考虑，会选择给 Block 加标签，以聚合同类内容，比如 &lt;code&gt;[[pnpm 的设计理念]]&lt;&#x2F;code&gt; 这个包含 Page 的 Block，可以加一个 &lt;code&gt;#[[Frontend]]&lt;&#x2F;code&gt; 标签，这样进入到 &lt;code&gt;Frontend&lt;&#x2F;code&gt; 页面后就能看到 &lt;code&gt;[[pnpm 的设计理念]]&lt;&#x2F;code&gt; 这个 Block 了。&lt;&#x2F;p&gt;
&lt;p&gt;那么这两种用法有什么区别呢？&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f9f9f9;color:#111111;&quot;&gt;&lt;code&gt;&lt;span&gt;&#x2F;&#x2F; Tag
&lt;&#x2F;span&gt;&lt;span&gt;[[pnpm 的设计理念]] #[[Programming]] #[[Frontend]]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; Properties
&lt;&#x2F;span&gt;&lt;span&gt;pnpm 的设计理念
&lt;&#x2F;span&gt;&lt;span&gt;category:: [[Programming]]
&lt;&#x2F;span&gt;&lt;span&gt;sub-category:: [[Frontend]]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;直接用 Tag 的话，有两个问题：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;如果 &lt;code&gt;[[pnpm 的设计理念]]&lt;&#x2F;code&gt; 下的内容较多，要分很多天来啃，那么这个 Block 都要手动加上 &lt;code&gt;#[[Frontend]]&lt;&#x2F;code&gt; 这个标签。&lt;&#x2F;li&gt;
&lt;li&gt;如果要给这个 Block 加上其他的 Tag，如 &lt;code&gt;#[[Build Tool]]&lt;&#x2F;code&gt;，那么就要找到所有引用该页面的 Block，挨个加上这个 Tag。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;如果最近一段时间在研究这个话题，那么可以每天 &lt;code&gt;copy ref&lt;&#x2F;code&gt; 过来，然后在下面补充学习内容。学习完后，如果其他 Block 要引用 &lt;code&gt;[[pnpm 的设计理念]]&lt;&#x2F;code&gt;，比如 &lt;code&gt;正如在 [[pnpm 的设计理念]] 中所说...&lt;&#x2F;code&gt; 这段话，不加标签，那么这个 Block 就会失去跟 &lt;code&gt;[[Frontend]]&lt;&#x2F;code&gt; &lt;code&gt;[[Programming]]&lt;&#x2F;code&gt; 的关联，如果要加标签则容易遗漏，也显得奇怪。&lt;&#x2F;p&gt;
&lt;p&gt;对于会被其他 Block 引用的 Page，可以采用给页面加属性，然后结合 Advanced Query 来实现。&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot; &gt;
  关于使用 flat blocks（block 之间是平行关系） 还是 nest blocks（block 之间是层级关系），这个因人而异。我之前喜欢用 nest blocks，如:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f9f9f9;color:#111111;&quot;&gt;&lt;code&gt;&lt;span&gt;• [[Thoughts]]
&lt;&#x2F;span&gt;&lt;span&gt;  • Logseq 还是挺好用的
&lt;&#x2F;span&gt;&lt;span&gt;  • 应该要写一篇使用 Logseq 心得的文章
&lt;&#x2F;span&gt;&lt;span&gt;  • ···
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样，可以建立 Daily 模版，然后只要往对应的 Block 下面添加内容就行了。进入页面后，也能看到相关的 Block。但如果 Block 的属性复杂一些，如既属于编程，同时还是一本书，就不知道该放在哪个 Block 下面了。&lt;&#x2F;p&gt;
&lt;p&gt;flat blocks 就像这样：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f9f9f9;color:#111111;&quot;&gt;&lt;code&gt;&lt;span&gt;• 冰椰拿铁什么时候这么难喝了 #Tiny
&lt;&#x2F;span&gt;&lt;span&gt;• 后面两个人说话好大声呀 #Tiny
&lt;&#x2F;span&gt;&lt;span&gt;• 晚上想看一部电影 #Thoughts
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;后来对 nest blocks 和 flat blocks 定了个规则，只有有明确从属关系的才使用 nest blocks（如书摘，文摘），其他默认用 flat blocks。
&lt;&#x2F;aside&gt;&lt;h3 id=&quot;ye-mian-shu-xing-he-gao-ji-jian-suo&quot;&gt;页面属性和高级检索&lt;&#x2F;h3&gt;
&lt;p&gt;页面属性上面已有介绍（页面的第一行以 &lt;code&gt;Key::Value&lt;&#x2F;code&gt; 这样的格式书写），我常用的属性有：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;is:&lt;&#x2F;strong&gt; 表示这个 Page 是什么，如 &lt;code&gt;is::[[Blog]]&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;category:&lt;&#x2F;strong&gt; 这个 Page 的分类，如 &lt;code&gt;category::[[Programming]]&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;sub-category:&lt;&#x2F;strong&gt; 这个 Page 的子分类，如 &lt;code&gt;sub-category::[[Frontend]]&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;medium:&lt;&#x2F;strong&gt; 这个 Page 的媒介类型（视频、书、文章等），如 &lt;code&gt;medium::[[Book]]&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;aside class=&quot;info&quot; &gt;
  一开始没有分这么细，用 &lt;code&gt;tags::[[Book]] [[Programming]]&lt;&#x2F;code&gt; 这种形式聚合在一起。但在写 Query 时遇到了障碍，被迫「降级」成这种写法。
&lt;&#x2F;aside&gt;
&lt;p&gt;然后就可以用 Query 把这些 Block 找出来了。比如可以找到所有包含 &lt;code&gt;category::[[Programming]]&lt;&#x2F;code&gt; 属性的页面的 Block。如果只是找出页面是不够的，我们来看下对比。&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;compare.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;compare.jpg 655w,&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;compare.jpg 655w&quot;
    sizes=&quot;(max-width: 655px) 100vw, 655px&quot; width=&quot;655&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;上面是 Block，下面是 Page，通常我们更想要得到上面的效果。为此，需要写 Advanced Query，下面这段代码会找到所有引用了包含 &lt;code&gt;category&lt;&#x2F;code&gt; 属性为 &lt;code&gt;Programming&lt;&#x2F;code&gt; 的页面的 Block。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;clojure&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-clojure &quot;&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;#+BEGIN_QUERY
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;; 以下注释是我查找网上文章结合自己的理解，不一定对
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;; &amp;#39;?xxx&amp;#39; 表示一个变量
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;; &amp;#39;$&amp;#39; 表示数据库
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;; &amp;#39;:xxx&amp;#39; 表示字段和查询关键字
&lt;&#x2F;span&gt;&lt;span&gt;{:title [:h2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;quot;Todo&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt; :query [:find (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;pull&lt;&#x2F;span&gt;&lt;span&gt; ?b [*]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;;找到所有符合条件的条目，&amp;#39;*&amp;#39; 表示条目的所有字段
&lt;&#x2F;span&gt;&lt;span&gt; :in $ ?category &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;;&amp;#39;?category&amp;#39; 就是通过 &amp;#39;inputs&amp;#39; 传过来的变量
&lt;&#x2F;span&gt;&lt;span&gt; :where
&lt;&#x2F;span&gt;&lt;span&gt;  [?b :block&#x2F;ref-pages ?p] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;;条件语句用 &amp;#39;[]&amp;#39; 表示，?p 是什么下面会说明
&lt;&#x2F;span&gt;&lt;span&gt;  [?p :block&#x2F;properties ?pr] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;;?p 是包含了 properties 为 ?pr 的页面，?pr 是什么，下面会说明
&lt;&#x2F;span&gt;&lt;span&gt;  [(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt; ?pr :category) ?t] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;; get 是获取 object 的属性，并将它设置为 ?t
&lt;&#x2F;span&gt;&lt;span&gt;  [(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;contains?&lt;&#x2F;span&gt;&lt;span&gt; ?t ?category)]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;; contains?（注意&amp;#39;?&amp;#39;在后面）表示 predict，也就是符合特定条件
&lt;&#x2F;span&gt;&lt;span&gt;  (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;not &lt;&#x2F;span&gt;&lt;span&gt;[?b :block&#x2F;marker ?m])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;; not [xxx] 表示对 [xxx] 的结果取反
&lt;&#x2F;span&gt;&lt;span&gt; ]
&lt;&#x2F;span&gt;&lt;span&gt; :inputs [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;quot;Programming&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;; 传入一个参数
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;#+END_QUERY
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;如果要找到标记为 TODO 的，稍作下调整即可:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;clojure&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-clojure &quot;&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;#+BEGIN_QUERY
&lt;&#x2F;span&gt;&lt;span&gt;{:title [:h2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;quot;Doing&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt; :query [:find (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;pull&lt;&#x2F;span&gt;&lt;span&gt; ?b [*])
&lt;&#x2F;span&gt;&lt;span&gt; :in $ ?category
&lt;&#x2F;span&gt;&lt;span&gt;:where
&lt;&#x2F;span&gt;&lt;span&gt; [?b :block&#x2F;marker ?m]
&lt;&#x2F;span&gt;&lt;span&gt; [(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; ?m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;quot;TODO&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)]
&lt;&#x2F;span&gt;&lt;span&gt; [?b :block&#x2F;ref-pages ?p]
&lt;&#x2F;span&gt;&lt;span&gt; [?p :block&#x2F;properties ?pr]
&lt;&#x2F;span&gt;&lt;span&gt; [(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt; ?pr :category) ?t]
&lt;&#x2F;span&gt;&lt;span&gt; [(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;contains?&lt;&#x2F;span&gt;&lt;span&gt; ?t ?category)]
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt; :inputs [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;quot;Programming&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;#+END_QUERY
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;aside class=&quot;info&quot; &gt;
  这里使用 &lt;code&gt;:inputs [:current-page]&lt;&#x2F;code&gt; 会更加灵活，但 Logseq 对 &lt;code&gt;current-page&lt;&#x2F;code&gt; 做了小写处理，导致 &lt;code&gt;(contains? ?t ?category)&lt;&#x2F;code&gt; 无法匹配，换用其他写法如 &lt;code&gt;(some #(= (clojure.string&#x2F;lower-case %) ?current-page) (into [] ?t))&lt;&#x2F;code&gt; （将 &lt;code&gt;set&lt;&#x2F;code&gt; 先转为 &lt;code&gt;vect&lt;&#x2F;code&gt;，再通过 some 判断是否有一个 item，小写化之后跟 &lt;code&gt;?current-page&lt;&#x2F;code&gt; 一样），也不行，所以就手动传入 Page Name 了。
&lt;&#x2F;aside&gt;&lt;h3 id=&quot;shi-yong-copy-block-embed-lai-ju-he-nei-rong-dao-ye-mian&quot;&gt;使用 Copy block embed 来聚合内容到页面&lt;&#x2F;h3&gt;
&lt;p&gt;这是某一天的 Journal 页，每天的页面内容大概就是这个样子&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;journal.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;journal.jpg 844w,&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;journal.jpg 844w&quot;
    sizes=&quot;(max-width: 844px) 100vw, 844px&quot; width=&quot;844&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;可以看到有些 Block 打了标签，有些没有。没打标签的，通常会 Link 到一个 Page，在 Page 里会有相关的属性，通过属性可以将 Block Query 出来。&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;page-properties.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;page-properties.jpg 837w,&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;page-properties.jpg 837w&quot;
    sizes=&quot;(max-width: 837px) 100vw, 837px&quot; width=&quot;837&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;aside class=&quot;info&quot; &gt;
  因为这个 Page 有可能在其他 Block 中被引用，所以选择了 Properties
&lt;&#x2F;aside&gt;
&lt;p&gt;展开的内容就记在 Block 下，这样回顾时也方便知道每天都记了哪些内容。但这样会比较零散，其他 Block 再引用该 Page 时，只能看到内容分散在不同天的 Block 下。这里有一个 Tip 是使用 &lt;code&gt;Copy block embed&lt;&#x2F;code&gt;。将每天记录的内容 &lt;code&gt;Copy block embeds&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;copy-block-embeds.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;copy-block-embeds.jpg 378w,&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;copy-block-embeds.jpg 378w&quot;
    sizes=&quot;(max-width: 378px) 100vw, 378px&quot; width=&quot;378&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;然后在对应的页面粘贴即可&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;paste-embed-blocks.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;paste-embed-blocks.jpg 835w,&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;paste-embed-blocks.jpg 835w&quot;
    sizes=&quot;(max-width: 835px) 100vw, 835px&quot; width=&quot;835&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;在一处编辑，其他地方自动更新。点击右边的数字可以看到原始的内容。这样既可以发挥 Logseq 快速记录的特性，又能让相关内容很好地聚合。&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot; &gt;
  &lt;code&gt;copy ref&lt;&#x2F;code&gt; 和 &lt;code&gt;copy embeds&lt;&#x2F;code&gt; 都可以同步显示内容。区别是，前者只能展示一级内容，且点击后会跳转到 Source Block，后者可以展示多个层级的内容，且可以就地编辑。
&lt;&#x2F;aside&gt;&lt;h3 id=&quot;zai-ye-mian-nei-jiang-xiang-guan-block-an-bu-tong-wei-du-ju-he&quot;&gt;在页面内将相关 Block 按不同维度聚合&lt;&#x2F;h3&gt;
&lt;p&gt;因为 Block 与 Page 之间是通过属性间接关联在一起的，所以这些 Block 不会自动出现在该 Page 下，需要通过 Advanced Query 将它们检索出来，相关的 Code 上面已经有了，这里看下展示效果：&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;page.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;page.jpg 832w,&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;page.jpg 832w&quot;
    sizes=&quot;(max-width: 832px) 100vw, 832px&quot; width=&quot;832&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;划分的维度很简单：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Inbox:&lt;&#x2F;strong&gt; 没有 Todo 标记的（&lt;code&gt;(not [?b :block&#x2F;marker ?m])&lt;&#x2F;code&gt;），表示将来某一天可以做&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Todo:&lt;&#x2F;strong&gt; 标记为 &lt;code&gt;TODO&lt;&#x2F;code&gt; 的 Block&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Doing:&lt;&#x2F;strong&gt; 标记为 &lt;code&gt;DOING&lt;&#x2F;code&gt; 的 Block&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Done:&lt;&#x2F;strong&gt; 标记为 &lt;code&gt;DONE&lt;&#x2F;code&gt; 的 Block&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;aside class=&quot;info&quot; &gt;
  这里需要在设置里将 &amp;quot;DOING 耗时统计&amp;quot;  这一项关掉，不然只要在 TODO 和 DOING 状态间切换就会进行耗时计算，这跟我们的使用姿势不符。
&lt;&#x2F;aside&gt;
&lt;p&gt;假如 &lt;code&gt;Todo&lt;&#x2F;code&gt; 列表空了，就从 &lt;code&gt;Inbox&lt;&#x2F;code&gt; 中找几个，状态切换为 &lt;code&gt;TODO&lt;&#x2F;code&gt; ，就会自动出现在 &lt;code&gt;Todo&lt;&#x2F;code&gt; 这个 Group 下。&lt;&#x2F;p&gt;
&lt;p&gt;假如 &lt;code&gt;Doing&lt;&#x2F;code&gt; 的做完了，从 &lt;code&gt;Todo&lt;&#x2F;code&gt; 中找几个，状态切换为 &lt;code&gt;DOING&lt;&#x2F;code&gt; （点击 TODO 按钮即可），就会自动出现在 &lt;code&gt;Doing&lt;&#x2F;code&gt; 这个 Group 下。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;yi-bing-guan-li-todo&quot;&gt;一并管理 Todo&lt;&#x2F;h3&gt;
&lt;p&gt;用 Logseq 管理 Todo 不是一个顺便的行为，而是合适的行为。对于 Todo 来说，我觉得 Context 是很重要的，而 Logseq 可以为 Todo 提供足够多的 Context，同时可以将 Todo 和其他 Block 联系起来。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;chang-jing-mo-ni&quot;&gt;场景模拟&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;jin-tian-de-dai-ban-shi-xiang-you-na-xie&quot;&gt;今天的待办事项有哪些&lt;&#x2F;h3&gt;
&lt;p&gt;先从昨天的 Todo 中找哪些今天可以继续做的，通过 copy ref 的方式，放到今天的 Todo 列表中。&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot; &gt;
  用 copy ref 可以保持一致性，只要修改一处，其他地方都会同时更新。
&lt;&#x2F;aside&gt;
&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;today-todo.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;today-todo.jpg 449w,&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;today-todo.jpg 449w&quot;
    sizes=&quot;(max-width: 449px) 100vw, 449px&quot; width=&quot;449&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;点击进去后可以看到相关的引用&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;ref-backlink.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;ref-backlink.jpg 837w,&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;ref-backlink.jpg 837w&quot;
    sizes=&quot;(max-width: 837px) 100vw, 837px&quot; width=&quot;837&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;aside class=&quot;info&quot; &gt;
  注意到 Block 后面的数字，这是 Logseq 的一个 Feature：点击 「TODO」后会切换到「DOING」，同时开始计时，当再切换到「TODO」或「DONE」时，就能看到经过了多少时间。可以在 Settings 里关闭该功能。
&lt;&#x2F;aside&gt;
&lt;p&gt;如果这几个 Todo 做完了，可以从其他标为 Favorite 页面的待办里挑几个出来。「挑」的过程就是将 Block 的 &lt;code&gt;&#x2F;TODO&lt;&#x2F;code&gt; 切换为 &lt;code&gt;&#x2F;DOING&lt;&#x2F;code&gt;，然后 copy ref 到今天的 Todo 列表里。&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot; &gt;
  我的一些 Favorite 页面，方便回顾&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f9f9f9;color:#111111;&quot;&gt;&lt;code&gt;&lt;span&gt;- Ideas &#x2F;&#x2F; 随时冒出来的一些想法
&lt;&#x2F;span&gt;&lt;span&gt;- Thoughts&#x2F;&#x2F; 自己的一些思考
&lt;&#x2F;span&gt;&lt;span&gt;- Pearls &#x2F;&#x2F; 网上看到的一些不错的内容
&lt;&#x2F;span&gt;&lt;span&gt;- Tiny &#x2F;&#x2F; 记录生活中的一些小细节
&lt;&#x2F;span&gt;&lt;span&gt;- Articles
&lt;&#x2F;span&gt;&lt;span&gt;- Books
&lt;&#x2F;span&gt;&lt;span&gt;- Frontend
&lt;&#x2F;span&gt;&lt;span&gt;- Programming
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bpikCLhpIRY&quot;&gt;这个视频&lt;&#x2F;a&gt;的作者用了另一种维度来作为 Daily Entry 的模版&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f9f9f9;color:#111111;&quot;&gt;&lt;code&gt;&lt;span&gt;- Create
&lt;&#x2F;span&gt;&lt;span&gt;- Consume
&lt;&#x2F;span&gt;&lt;span&gt;- Connect
&lt;&#x2F;span&gt;&lt;span&gt;- Celebrate
&lt;&#x2F;span&gt;&lt;span&gt;- Coordinate
&lt;&#x2F;span&gt;&lt;span&gt;- Consolidate
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

&lt;&#x2F;aside&gt;&lt;h3 id=&quot;zuo-du-shu-bi-ji&quot;&gt;做读书笔记&lt;&#x2F;h3&gt;
&lt;p&gt;这是 Logseq 的又一个亮点，通过命令 &lt;code&gt;&#x2F;Upload an asset&lt;&#x2F;code&gt; 上传 PDF 文件后（其实就是将文件拷贝到 Logseq 在本地的目录），点击该文件可以左右分栏，左边是 PDF 电子书，右边是笔记区。阅读过程中，如果有想记录的内容，可以先在 PDF 中高亮，然后右键选择 &lt;code&gt;copy ref&lt;&#x2F;code&gt;，在 Block 中粘贴，就能引用到这些文字了。相比传统的复制粘贴，&lt;code&gt;copy ref&lt;&#x2F;code&gt; 的内容点击后，可以回到 PDF，进而查看更多的上下文。也可以方便地加入自己的 Comment&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;pdf-read.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;pdf-read.jpg 790.5w,&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;pdf-read.jpg 790.5w&quot;
    sizes=&quot;(max-width: 790.5px) 100vw, 790.5px&quot; width=&quot;790.5&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;h3 id=&quot;lin-shi-chu-xian-de-dai-ban-shi-xiang&quot;&gt;临时出现的待办事项&lt;&#x2F;h3&gt;
&lt;p&gt;可以新建一个 &lt;code&gt;Inbox&lt;&#x2F;code&gt; 页面，然后把事项放到当天的 Journal 页，打上 &lt;code&gt;Inbox&lt;&#x2F;code&gt; 标签。如&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f9f9f9;color:#111111;&quot;&gt;&lt;code&gt;&lt;span&gt;• 帮忙调研某个产品 #Inbox
&lt;&#x2F;span&gt;&lt;span&gt;• 用户反馈了个 Bug #Inbox
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后就可以在工作间隙，Review 这些 Inbox 项，看是否应该在今天处理，是否要加上特定的属性（方便归类到特定的页面）。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hui-gu&quot;&gt;回顾&lt;&#x2F;h3&gt;
&lt;p&gt;回顾是一个很重要的过程，对于学到的内容可以加深印象，了解进行中的事情处于什么状态，帮助制定下一阶段的计划。对于每一个需要回顾的页面，可以都加入到侧栏的 Favorites，同时结合 Advanced Query 把 Block 按 Todo &#x2F; Doing &#x2F; Done 区分开来（像 Ideas &#x2F; Thoughts 这样的页面就不需要了）。&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot; &gt;
  如果担心遗漏，可以按日期来 Review
&lt;&#x2F;aside&gt;&lt;h2 id=&quot;xiao-ji-qiao&quot;&gt;小技巧&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;输入 &lt;code&gt;&#x2F;&lt;&#x2F;code&gt; 会出现自动提示，比如设置为 TODO，上传附件等，其中 &lt;code&gt;&#x2F;Today&lt;&#x2F;code&gt; 和 &lt;code&gt;&#x2F;Current time&lt;&#x2F;code&gt; 很方便，前者可以自动添加当前日期，如 &lt;code&gt;[[2022-03-24]]&lt;&#x2F;code&gt;，这样就会以 Back Link 的形式出现在 &lt;code&gt;2022-03-24&lt;&#x2F;code&gt; Journal 页。后者会输出当前时间（精确到分钟），可以用来记录时间消耗。&lt;code&gt;&#x2F;Draw&lt;&#x2F;code&gt; 甚至可以嵌入一个画板。&lt;&#x2F;li&gt;
&lt;li&gt;使用 &lt;code&gt;{{cloze content}}&lt;&#x2F;code&gt; 可以把 &lt;code&gt;content&lt;&#x2F;code&gt; 隐藏起来，点击后展开，可以用来记忆单词。&lt;&#x2F;li&gt;
&lt;li&gt;将常用的结构设置为 Template（比如每天的例行事项，右键点击左边的小圆点可以看到这个选项），在需要的地方选择该模版即可自动填充模版内容。&lt;&#x2F;li&gt;
&lt;li&gt;在设置里开启「Developer mode」后，可以安装 Plugins 和 Themes&lt;&#x2F;li&gt;
&lt;li&gt;按住 &lt;code&gt;Shift&lt;&#x2F;code&gt; 点击 Page 链接，可以在 Sidebar 打开，方便同时浏览&lt;&#x2F;li&gt;
&lt;li&gt;编辑代码或者 Query，可以点击上面的空白区域

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;edit-query.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;edit-query.jpg 492w,&amp;#x2F;posts&amp;#x2F;logseq&amp;#x2F;edit-query.jpg 492w&quot;
    sizes=&quot;(max-width: 492px) 100vw, 492px&quot; width=&quot;492&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;xiao-jie&quot;&gt;小结&lt;&#x2F;h2&gt;
&lt;p&gt;以上就是我目前的 Logseq 使用习惯。因为 Logseq 灵活又强大，大家的使用姿势都不太一样，以下这几个链接也可以一并参考：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.bmpi.dev&#x2F;self&#x2F;life-in-plain-text&#x2F;&quot;&gt;我的人生管理系统&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=BhHfF0P9A80&quot;&gt;How I Use Logseq to Take Notes and Organize My Life&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=DxoGJBb1mWQ&quot;&gt;我是如何使用 Logseq 的 (via Randy)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bpikCLhpIRY&quot;&gt;How I Orgnise My Life&lt;&#x2F;a&gt; 作者用的 Roam Research，可以参考下使用理念&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ScRrcL__SSI&quot;&gt;Roam Research 作者是如何使用 Roam Research 的&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
        </item>
        
        
        <item>
            <title>拼音猜成语</title>
            <pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/idiom/</link>
            <guid>https://limboy.me/posts/idiom/</guid>
            <description>&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pinyincaichengyu.com&#x2F;&quot;&gt;拼音猜成语&lt;&#x2F;a&gt; 是我第一款 PV 超过百万的产品，这里就来聊聊它背后的故事。&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;idiom&amp;#x2F;data.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;idiom&amp;#x2F;data.jpg 1128.5w,&amp;#x2F;posts&amp;#x2F;idiom&amp;#x2F;data.jpg 1128.5w&quot;
    sizes=&quot;(max-width: 1128.5px) 100vw, 1128.5px&quot; width=&quot;1128.5&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;h3 id=&quot;bei-jing&quot;&gt;背景&lt;&#x2F;h3&gt;
&lt;p&gt;有一段时间在 Twitter 上经常能看到有推友在发各种颜色的方块，原来是一个叫 &lt;a href=&quot;https:&#x2F;&#x2F;www.nytimes.com&#x2F;games&#x2F;wordle&#x2F;index.html&quot;&gt;Wordle&lt;&#x2F;a&gt; 的英文猜词小游戏，试玩了后发现还挺不错的，轻量、节制还益智。就拉妹子一起来玩，有时还会在零点一起挑战。但非母语也影响了游戏体验，遇到一些生僻的词就只能束手就擒了。某天走在路上就在想，是不是可以做一个成语版的 Wordle，用拼音？&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kai-fa&quot;&gt;开发&lt;&#x2F;h3&gt;
&lt;p&gt;有了方向之后，就开始细化具体的游戏机制，发现只要把成语拆解为拼音组合，就可以像 Wordle 那样猜了。较快地搭了一个原型后，让妹子体验了下，发现可以玩，好像还挺好玩，这也给了我一些信心。之后大概花了 1 个星期的时间完善这个小游戏，从琢磨游戏机制到设计界面和交互，到实现功能、填充词库。这段时间在学习前端，正好可以通过这个项目来练手。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nei-ce&quot;&gt;内测&lt;&#x2F;h3&gt;
&lt;p&gt;其实就是拉人来玩。在常去的咖啡馆也邀请了店员来感受下这个游戏，有表示拼音不太友好的，但也有顺利玩下来并猜到答案的，看起来玩法上应该还 OK，拼音字母可能会是个障碍，但了解了玩法之后应该问题不大。也在小群里让小伙伴们体验了下。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shang-xian&quot;&gt;上线&lt;&#x2F;h3&gt;
&lt;p&gt;开发完上线后，在 &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;_limboy&#x2F;status&#x2F;1483622557782003712?s=20&quot;&gt;Twitter&lt;&#x2F;a&gt; 上发了一下，反响还不错，也收到了不少反馈。比如没有对输入做限制可以「作弊」，对字母判定上有一些疑惑，有的同学表示太难了，也有觉得简单的。结合这些反馈做了些调整，比如只能输入有效的拼音组合，对键盘做了字母高亮等，自己玩下来感觉难度正好。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chuan-bo&quot;&gt;传播&lt;&#x2F;h3&gt;
&lt;p&gt;经过几天的自然传播后，一天有几千 UV，Twitter 上搜索「pinyincaichengyu.com」也能看到有不少人在玩这个游戏。查看访问统计，一开始 Twitter 的来源最多，几天后从 Facebook、Google 和 Instagram 来的越来越多。有一段时间新加坡的玩家占了大多数。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fan-kui&quot;&gt;反馈&lt;&#x2F;h3&gt;
&lt;p&gt;Side Project 的成就感除了完成作品之外，还有很大一部分是用户的反馈。从来信才知道有不少国外的朋友在通过这个小游戏学习中文，也有教汉语的老师会在课后跟同学们一起玩这个游戏，有在新加坡的电台听到介绍这个游戏的。当然也有反馈游戏 Bug 和 Feature 的，比如词库里「厚积薄发」的「薄」声调被标记成了「bao」，然后那个时间段就收到了不少反馈该问题的来信。&lt;&#x2F;p&gt;
&lt;p&gt;因为游戏反响还不错，有国外的媒体来信希望了解这个游戏更多的信息，如澎湃新闻英文频道、卫报，也有国内媒体，这个确实是意料之外。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gai-jin&quot;&gt;改进&lt;&#x2F;h3&gt;
&lt;p&gt;第一版上线后，代码质量感觉还是不够好，于是从头开始又写了一遍，这次代码设计上更加合理，流程上也更加规范，加入了测试集和 Storybook，顺便把觉得不错的 Feature 如声调提示、统计信息、成语解释等给加上了，对 UI 也做了些优化。&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;idiom&amp;#x2F;popup.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;idiom&amp;#x2F;popup.jpg 672w,&amp;#x2F;posts&amp;#x2F;idiom&amp;#x2F;popup.jpg 672w&quot;
    sizes=&quot;(max-width: 672px) 100vw, 672px&quot; width=&quot;672&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;aside class=&quot;info&quot; &gt;
  加入「游戏统计」这块还有点小挑战，因为没有用户系统，只能通过设备来判断，而发给服务器的请求又很容易伪造，所以需要一套防护措施。采用的是客户端加密的方式，&lt;code&gt;import&lt;&#x2F;code&gt; 一段加密后的 js，然后生成一个全局变量（用来验证和避免重放攻击），因为这段 js 用到了很多浏览器相关的 API，所以不太好通过 cli 的方式直接引用（当然可以用 headless 工具，不过这也增加了成本）
&lt;&#x2F;aside&gt;&lt;h3 id=&quot;kai-yuan&quot;&gt;开源&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;idiom&quot;&gt;开源&lt;&#x2F;a&gt;就像是个节点，让这个小游戏的源码出现在了公共区域，虽然不一定会有多少人关注。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shou-huo&quot;&gt;收获&lt;&#x2F;h3&gt;
&lt;p&gt;通过这个项目更加熟悉了前端，包括工程化、React、CSS、JS、Browser API 等等，也感受到了 Side Project 的乐趣，更重要的是对自己的长处和短板有了更清晰的认识，为之后的发展方向选择提供了样本。&lt;&#x2F;p&gt;
</description>
        </item>
        
        
        <item>
            <title>关于 Bytetalk</title>
            <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/bytetalk/</link>
            <guid>https://limboy.me/posts/bytetalk/</guid>
            <description>&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;podcast&#x2F;6177bab6b69226ed16a3ed41&quot;&gt;Bytetalk&lt;&#x2F;a&gt; 是去年的一个尝试性项目，以访谈的形式与不同领域的程序员聊聊他们的故事。一方面可以拓展自己的视野，另一方面也能给听众一些启发。第一季 7 期录制下来，结果还不错，感谢各位嘉宾朋友和听众们。等接下来有了更明确的规划后，再来开始第二季。这里简单回顾下 Bytetalk 背后的一些故事。&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;bytetalk&amp;#x2F;data.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;bytetalk&amp;#x2F;data.jpg 1086w,&amp;#x2F;posts&amp;#x2F;bytetalk&amp;#x2F;data.jpg 1086w&quot;
    sizes=&quot;(max-width: 1086px) 100vw, 1086px&quot; width=&quot;1086&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;之所以选择播客，而不是更常见的视频，主要是因为自己在镜头前会变得不自然，访谈嘉宾可能也会有这方面的困扰，另一方面视频的录制和剪辑成本也会更高。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-yi-qi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;6177bab6b69226ed16a3ed42&quot;&gt;第一期&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;第一期节目尤为重要，因为在录制播客方面的经验几乎为零，所以需要容忍度高、能聊又互相熟悉的嘉宾。为此借着聚餐的名义，将字节的几个小伙伴「诱骗」到家里，期间还玩了会桥牌。因为是第一次录多人聊天，在设备调试这块就花了近半小时，好在最后的效果还能接受。&lt;&#x2F;p&gt;
&lt;p&gt;第一期节目没有特定的主题，主要围绕一些常见的话题展开讨论，如：如何保持对工作的热情，提升竞争力，度过 35 岁危机等等。因为相互之间比较熟悉，所以聊天的氛围还不错。在推上发了之后，也收到了些正面反馈。&lt;&#x2F;p&gt;
&lt;p&gt;通过这一期节目，基本把播客的整个制作流程摸熟了，但作为主持人还有很大的成长空间，同时录音质量把控和后期剪辑这两块还有待改善。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-er-qi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;618208328a9c9c36e9977e44&quot;&gt;第二期&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;有了第一次的经验，接下来找访谈对象时，会更有意识地去找有「聊点」的嘉宾，然后就想到了之前在凤凰网的同事，他现在已经在经营自己的潜水事业了，我很好奇他是如何进行这么大的跨行业转行。虽然好久没有联系，勾搭了之后，还是接受了邀请，这也给了我不小的信心。这一次是远程，访谈大纲和线上录制都通过飞书来完成，还挺顺利的（PS：那时还没有意识到录多轨音频的重要性 😂）。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-san-qi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;618c9897fad86a854205b2a0&quot;&gt;第三期&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;第三期我想邀请的嘉宾是&lt;a href=&quot;https:&#x2F;&#x2F;imtx.me&#x2F;&quot;&gt;图拉鼎&lt;&#x2F;a&gt;，我觉得应该会有很多人对独立开发者感兴趣，另一方面也好久没聊了，正好可以借录制播客聚聚。还会担心他档期比较紧或者对播客录制不太感冒，结果比我想的顺利。于是就找了一个茶馆，开始了第三期节目的录制&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;bytetalk&amp;#x2F;teahouse.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;bytetalk&amp;#x2F;teahouse.jpg 1000w,&amp;#x2F;posts&amp;#x2F;bytetalk&amp;#x2F;teahouse.jpg 1000w&quot;
    sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; width=&quot;1000&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;aside class=&quot;info&quot; &gt;
  &lt;strong&gt;一个小插曲:&lt;&#x2F;strong&gt; 由于收听次数较多，VPS 流量已经顶不住了，听众也反馈有卡顿的现象。图拉鼎建议可以试下 Cloudflare，果然非常有效，而且还是免费，一下就让我成了 Cloudflare 的粉丝，并以股票支持。（虽然买了之后就一路降降降···）
&lt;&#x2F;aside&gt;&lt;aside class=&quot;info&quot; &gt;
  &lt;strong&gt;另一个小插曲:&lt;&#x2F;strong&gt; 我妈也会听这个节目，她说这一期她最喜欢。
&lt;&#x2F;aside&gt;&lt;h3 id=&quot;di-si-qi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;61948a3ee2550ba6b3fa8f2b&quot;&gt;第四期&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;前三期节目播出后，收到了 &lt;a href=&quot;https:&#x2F;&#x2F;lutaonan.com&#x2F;&quot;&gt;Randy&lt;&#x2F;a&gt; 的来信，让我觉得特别惊喜，因为自己之前也有关注过他，正好可以做一期播客。这个过程中我也感受到了 Randy 的认真和专业。为了这次播客，他准备了非常详细的文稿，针对访谈大纲基本都有详细的回应文字，音频录制设备也很完善。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-wu-qi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;619c9a7515e2f7df2eca996e&quot;&gt;第五期&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;在寻找下一个嘉宾时，&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;yihong0618&quot;&gt;yihong&lt;&#x2F;a&gt; 出现在了我的视野，他的 running page、对跑步的坚持、对开源的热情、那股爱折腾的劲儿给我留了下了很深的印象，就想邀请他来聊一期，他也愉快地答应了。&lt;&#x2F;p&gt;
&lt;p&gt;这次的录制过程还有一些小插曲，我拉小蕊作为 co-host 来共同录制，结果我带上了收音设备，却忘了带上对应的连接线。然后就用了 AirPods 结合 iPhone 的录音。跟 yihong 一开始用的飞书视频，结果由于飞书对 VPN 的支持不好，导致通话效果不佳（后来才发现是 VPN 的原因），最后用的微信语音，双方各自录制自己的音轨，由于两边都缺少专业的录音设备，导致这次的音频效果不够理想（试了 GarageBand 的各种奇技淫巧，还是无法弥补音源质量上的不足）。&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot; &gt;
  &lt;strong&gt;PS:&lt;&#x2F;strong&gt; yihong 的东北话实在太有喜感了，哈哈。
&lt;&#x2F;aside&gt;&lt;h3 id=&quot;di-liu-qi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;61b43114f7b64dfb09f2524c&quot;&gt;第六期&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;因为自己开始逐渐关注前端，然后就发现 &lt;a href=&quot;https:&#x2F;&#x2F;antfu.me&#x2F;&quot;&gt;Anthony Fu&lt;&#x2F;a&gt; 在我的 Timeline 上出镜率很高，内容也都很棒。去了解了下之后，发现这位同学很不一样：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;antfu&quot;&gt;Github&lt;&#x2F;a&gt; 上有很多的 Sponsor，参与&#x2F;主导了一些很有影响力的开源项目，也会有一些很奇特的 Idea，用英文交流，习惯在国外的开源社区活动，Github Contribution 几乎全是绿的。这完全勾起了我的好奇心，很想了解这位神人背后的一些故事，于是就试探性地在推上发了邀请，没想到很快答应了。&lt;&#x2F;p&gt;
&lt;p&gt;Anthony 同学的语言表达和组织能力确实很强，全程我基本只要把问题抛过去，就能有较完整和流畅的回复。后期剪辑时还重新录制了下自己的那一轨音频（因为原先的那一轨有些瑕疵，加上我说的内容也较少 😂），导致听起来不像一个完整的访谈···&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-qi-qi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;61c6cccac525309a443b5b36&quot;&gt;第七期&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;在跟 Randy 聊时，他有提到过 &lt;a href=&quot;https:&#x2F;&#x2F;logseq.com&#x2F;&quot;&gt;Logseq&lt;&#x2F;a&gt; 这款笔记利器，就去体验了下，然后就被惊到了。极低的输入成本，强大的双链和 Query，方便的 Journal，Privacy First，Local Data 等等。然后就想着要是能邀请 Logseq 的作者来聊聊就太好了，按照惯例，先在推上勾搭，没想到我跟作者&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tiensonqin&quot;&gt;天生&lt;&#x2F;a&gt;竟还有交集（同在花瓣工作过），他也答应了这次邀请。在推上发了这个消息后，&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;laike9m&quot;&gt;laike9m&lt;&#x2F;a&gt; 也有兴趣一起来聊聊，于是就有了这期的访谈，播出后反响也不错。天生的谦逊、对 logseq 的热情和 laike9m 的专业性都给我留下了很深的印象。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;jie-wei&quot;&gt;结尾&lt;&#x2F;h3&gt;
&lt;p&gt;制作 Bytetalk 的过程让我对播客有了更多的了解，也明白了其中的艰辛（寻找嘉宾，准备大纲，后期剪辑等等）。但看到大家的反馈就觉得这事值得，等我把这事思考地成熟些，就可以开始第二季了。&lt;&#x2F;p&gt;
</description>
        </item>
        
        
        
        
        
        
        <item>
            <title>2021 Review</title>
            <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/2021-review/</link>
            <guid>https://limboy.me/posts/2021-review/</guid>
            <description>&lt;p&gt;2021 这一年如果要有个分界点的话，那就是年中离开字节跳动。在飞书工作了两年之后，自觉还是无法适应和胜任相关的工作。一方面自己对移动端开发的热情越来越低，其他方面也没有太强烈的意愿，另一方面飞书的强度对我这个「老人」挑战也挺大的，加上 ToB 业务属性，处理多方问题和反馈也对精力撕扯得厉害。不过确实也学到了很多，尤其是身边的小伙伴们，他们真的很棒。&lt;&#x2F;p&gt;
&lt;p&gt;辞职之后给了自己一段缓冲期，逐步去探索能够持续有热情地做十年的事情。不得不说，可以自由支配的时间是一件奢侈品，一旦适应就很难再回去了。&lt;&#x2F;p&gt;
</description>
        </item>
        
    </channel>
</rss>