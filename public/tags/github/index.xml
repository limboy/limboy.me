<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
      <title>Limboy - github</title>
        <link>https://limboy.me</link>
        <description></description>
        <generator>Zola</generator>
        <language>zh</language>
        <atom:link href="https://limboy.me/tags/github/index.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Wed, 25 Aug 2010 00:00:00 +0000</lastBuildDate>
        
        <item>
            <title>使用github作为博客引擎</title>
            <pubDate>Wed, 25 Aug 2010 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/make-github-as-blog-engine/</link>
            <guid>https://limboy.me/posts/make-github-as-blog-engine/</guid>
            <description>&lt;p&gt;在介绍之前，先普及一下基础知识，大鸟们直接跳过。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shi-yao-shi-git&quot;&gt;什么是 git&lt;&#x2F;h3&gt;
&lt;p&gt;git 是一个分布式版本控制工具(DVCS)，不需要服务端软件支持(即使在地铁里也可以正常 commit)，Linux 内核开发用的版本控制工具就是它。&lt;&#x2F;p&gt;
&lt;p&gt;常用的 SVN 属于集中式版本控制工具(CVCS)，需要在服务端开启 SVN 服务，然后客户端 checkout,commit,update。&lt;&#x2F;p&gt;
&lt;p&gt;更详细的介绍请参考&lt;a href=&quot;http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Git_(software)&quot;&gt;维基百科&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shi-yao-shi-github&quot;&gt;什么是 github&lt;&#x2F;h3&gt;
&lt;p&gt;&amp;quot;github&amp;quot;:http:&#x2F;&#x2F;github.com&#x2F; 的标语是：&amp;quot;secure source code hosting and collaborative development&amp;quot;。一个基于 git 的类似 google code 的代码仓库，付费版的用户可以创建私有仓库，支持多人开发。很多项目都选择了 github 来保存代码，如&amp;quot;jQuery&#x2F;reddit&#x2F;RoR&#x2F;CakePHP&#x2F;Redis&amp;quot;等等。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;github-pages&quot;&gt;github pages&lt;&#x2F;h3&gt;
&lt;p&gt;先说说 pages 功能，blog 就是在 pages 的基础上搭建的。如果英文不错的话，可以直接&lt;a href=&quot;http:&#x2F;&#x2F;pages.github.com&#x2F;&quot;&gt;浏览此页&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;创建一个用户的页面很简单，假设你的用户名为 foo&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;新建一个仓库(repository)，名称填&amp;quot;foo.github.com&amp;quot;，创建&lt;&#x2F;li&gt;
&lt;li&gt;在本地新建一个文件夹，假如为 foo,在 foo 里面新建一个 index.html 页面，随便输入点内容&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;git init&lt;&#x2F;code&gt; 初始化，&lt;code&gt;git add .&lt;&#x2F;code&gt; 把 index.html 加入到仓库中，&lt;code&gt;git commit&lt;&#x2F;code&gt; 提交修改&lt;&#x2F;li&gt;
&lt;li&gt;添加 github 的分支 &lt;code&gt;git remote add origin git@github.com:foo&#x2F;foo.github.com.git&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;提交到 github 分支 &lt;code&gt;git push origin master&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;过 1 分钟左右，浏览 foo.github.com，就可以看到刚刚创建的 index.html 文件了。&lt;&#x2F;p&gt;
&lt;p&gt;除了创建用户页面，还可以针对每个项目单独创建项目的主页，这不是本文的重点，有兴趣的可以&lt;a href=&quot;http:&#x2F;&#x2F;pages.github.com&#x2F;&quot;&gt;浏览此页&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chuang-jian-blog&quot;&gt;创建 blog&lt;&#x2F;h3&gt;
&lt;p&gt;终于扯到正题上了(-,-)，前面已经说过如何创建 html 页面，其实已经可以写博客了，创建一个 index.html 页面，在里面列出写过的文章，点击标题进去后又是一个手动创建的 html 页。就是太麻烦了，一点都不酷，说不定还会被 MM 鄙视。&lt;&#x2F;p&gt;
&lt;p&gt;github 当然知道这个问题，所以他们创建了&lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;mojombo&#x2F;jekyll&quot;&gt;jekyll 模板引擎&lt;&#x2F;a&gt; 。简单来说，就是你可以用&lt;a href=&quot;http:&#x2F;&#x2F;www.textism.com&#x2F;tools&#x2F;textile&#x2F;?sample=2&quot;&gt;textile&lt;&#x2F;a&gt; 或者&lt;a href=&quot;http:&#x2F;&#x2F;daringfireball.net&#x2F;projects&#x2F;markdown&#x2F;syntax&quot;&gt;markdown&lt;&#x2F;a&gt;语法来写博客，提交到 github 后，会自动转换成 html。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;wiki.github.com&#x2F;mojombo&#x2F;jekyll&#x2F;sites&quot;&gt;这里&lt;&#x2F;a&gt;有很多网站&#x2F;博客，都是基于 github 的 jekyll 模板开发的，如果觉得哪个不错，可以查看 source。&lt;&#x2F;p&gt;
&lt;p&gt;先来看看&lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;mojombo&#x2F;mojombo.github.com&quot;&gt;这个仓库&lt;&#x2F;a&gt;，里面有一些特殊的文件&#x2F;文件夹：&lt;&#x2F;p&gt;
&lt;h3 id=&quot;config-yml&quot;&gt;_config.yml&lt;&#x2F;h3&gt;
&lt;p&gt;存储了一些设置，大部分的设置都可以通过命令行指定，但放到配置文件里更方便些&lt;&#x2F;p&gt;
&lt;h4 id=&quot;layouts&quot;&gt;_layouts&lt;&#x2F;h4&gt;
&lt;p&gt;_layouts 文件夹存放的是模板文件，文章会被渲染到这些模板里，{{ content }}变量指代的是文章内容&lt;&#x2F;p&gt;
&lt;h4 id=&quot;posts&quot;&gt;_posts&lt;&#x2F;h4&gt;
&lt;p&gt;这里就是真正存放博客文章的地方了，文件命名要遵守这种格式:year-month-day-title.markup&lt;&#x2F;p&gt;
&lt;h4 id=&quot;site&quot;&gt;_site&lt;&#x2F;h4&gt;
&lt;p&gt;这个文件夹是程序生成的，如果本地没有安装 jekyll 的话，是不会有这个文件夹的，如果想要先本地预览一下，再提交到 github，最好通过.gitignore 把这个文件夹排除。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;index-html&quot;&gt;index.html&lt;&#x2F;h4&gt;
&lt;p&gt;这个文件也有一个&lt;a href=&quot;http:&#x2F;&#x2F;wiki.github.com&#x2F;mojombo&#x2F;jekyll&#x2F;yaml-front-matter&quot;&gt;yaml 前缀&lt;&#x2F;a&gt; ，可以指定使用哪个模板，标题等等，所有根文件夹下的.html&#x2F;.htm&#x2F;.textile&#x2F;.markdown 都会被解析。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;other-files-folders&quot;&gt;other files&#x2F;folders&lt;&#x2F;h4&gt;
&lt;p&gt;上面没有列出的文件&#x2F;文件夹都会被 jekyll 放到_site 文件夹下，如 css&#x2F;image&#x2F;script 等等。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;jekyll-de-an-zhuang&quot;&gt;jekyll 的安装&lt;&#x2F;h3&gt;
&lt;p&gt;参考&lt;a href=&quot;http:&#x2F;&#x2F;wiki.github.com&#x2F;mojombo&#x2F;jekyll&#x2F;install&quot;&gt;安装页&lt;&#x2F;a&gt; ，如果使用时提示&amp;quot;liquid requires RubyGems version &amp;gt;= 1.3.7&amp;quot;，可以在&lt;a href=&quot;http:&#x2F;&#x2F;rubyforge.org&#x2F;frs&#x2F;?group_id=126&quot;&gt;这里&lt;&#x2F;a&gt; 下载对应的文件，安装即可。&lt;&#x2F;p&gt;
&lt;p&gt;安装完之后，为了避免路径调用问题，可以在 apache&#x2F;nginx 里给对应的文件夹(&#x2F;path&#x2F;to&#x2F;_site)绑定一个本地域名，如&amp;quot;lc.foo.github.com&amp;quot;，在终端里输入&amp;quot;jekyll --pygments&amp;quot;，然后就可以用该域名访问本地博客了，如果一切正常，再提交到 github&lt;&#x2F;p&gt;
&lt;p&gt;PS:如果你之前的博客是基于 wordpress&#x2F;movable type&#x2F;typo 4+，可以参考这篇&lt;a href=&quot;http:&#x2F;&#x2F;wiki.github.com&#x2F;mojombo&#x2F;jekyll&#x2F;blog-migrations&quot;&gt;迁移指南&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bang-ding-yu-ming&quot;&gt;绑定域名&lt;&#x2F;h3&gt;
&lt;p&gt;这个就更简单了，新建一个 CNAME 文本文件，在里面输入域名，如&amp;quot;blog.leezhong.com&amp;quot;，然后在域名提供商里，指定该域名的 CNAME 为&amp;quot;foo.github.com&amp;quot;，搞定&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tian-jia-ping-lun-gong-neng&quot;&gt;添加评论功能&lt;&#x2F;h3&gt;
&lt;p&gt;使用&lt;a href=&quot;http:&#x2F;&#x2F;disqus.com&quot;&gt;disqus&lt;&#x2F;a&gt; ，整个注册和使用流程还是挺清晰易懂的，这里就不多说了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;can-kao-wen-zhang&quot;&gt;参考文章&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&amp;quot;jekyll wiki&amp;quot;: &lt;a href=&quot;http:&#x2F;&#x2F;wiki.github.com&#x2F;mojombo&#x2F;jekyll&#x2F;&quot;&gt;http:&#x2F;&#x2F;wiki.github.com&#x2F;mojombo&#x2F;jekyll&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;github blog&amp;quot;: &lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;blog&#x2F;272-github-pages&quot;&gt;http:&#x2F;&#x2F;github.com&#x2F;blog&#x2F;272-github-pages&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;publishing a blog with github and jekyll&amp;quot;: &lt;a href=&quot;http:&#x2F;&#x2F;blog.envylabs.com&#x2F;2009&#x2F;08&#x2F;publishing-a-blog-with-github-pages-and-jekyll&quot;&gt;http:&#x2F;&#x2F;blog.envylabs.com&#x2F;2009&#x2F;08&#x2F;publishing-a-blog-with-github-pages-and-jekyll&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;hou-ji&quot;&gt;后记&lt;&#x2F;h3&gt;
&lt;p&gt;之前一直用的 wordpress，但是太臃肿了，而且有安全隐患，还得有一个 PHP 空间，访问速度也得不到保证。平时 github 用得比较多，正好他们提供&amp;quot;博客&amp;quot;服务，正合我意，初步使用下来，没有什么问题，能在本地用 vim 写 textile 语法的博客是一件多么爽的事情啊，还可以本地预览最终效果，数据也不会轻易丢失。&lt;&#x2F;p&gt;
&lt;p&gt;最后再次感谢 github 提供了这么好的服务，如果对 github 的创业历程感兴趣，可以参考&lt;a href=&quot;http:&#x2F;&#x2F;tom.preston-werner.com&#x2F;2008&#x2F;10&#x2F;18&#x2F;how-i-turned-down-300k.html&quot;&gt;这篇文章&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</description>
        </item>
        
    </channel>
</rss>