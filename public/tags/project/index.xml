<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
      <title>Limboy - project</title>
        <link>https://limboy.me</link>
        <description></description>
        <generator>Zola</generator>
        <language>zh</language>
        <atom:link href="https://limboy.me/tags/project/index.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Tue, 22 Mar 2022 00:00:00 +0000</lastBuildDate>
        
        <item>
            <title>拼音猜成语</title>
            <pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/idiom/</link>
            <guid>https://limboy.me/posts/idiom/</guid>
            <description>&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pinyincaichengyu.com&#x2F;&quot;&gt;拼音猜成语&lt;&#x2F;a&gt; 是我第一款 PV 超过百万的产品，这里就来聊聊它背后的故事。&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;idiom&amp;#x2F;data.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;idiom&amp;#x2F;data.jpg 1128.5w,&amp;#x2F;posts&amp;#x2F;idiom&amp;#x2F;data.jpg 1128.5w&quot;
    sizes=&quot;(max-width: 1128.5px) 100vw, 1128.5px&quot; width=&quot;1128.5&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;h3 id=&quot;bei-jing&quot;&gt;背景&lt;&#x2F;h3&gt;
&lt;p&gt;有一段时间在 Twitter 上经常能看到有推友在发各种颜色的方块，原来是一个叫 &lt;a href=&quot;https:&#x2F;&#x2F;www.nytimes.com&#x2F;games&#x2F;wordle&#x2F;index.html&quot;&gt;Wordle&lt;&#x2F;a&gt; 的英文猜词小游戏，试玩了后发现还挺不错的，轻量、节制还益智。就拉妹子一起来玩，有时还会在零点一起挑战。但非母语也影响了游戏体验，遇到一些生僻的词就只能束手就擒了。某天走在路上就在想，是不是可以做一个成语版的 Wordle，用拼音？&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kai-fa&quot;&gt;开发&lt;&#x2F;h3&gt;
&lt;p&gt;有了方向之后，就开始细化具体的游戏机制，发现只要把成语拆解为拼音组合，就可以像 Wordle 那样猜了。较快地搭了一个原型后，让妹子体验了下，发现可以玩，好像还挺好玩，这也给了我一些信心。之后大概花了 1 个星期的时间完善这个小游戏，从琢磨游戏机制到设计界面和交互，到实现功能、填充词库。这段时间在学习前端，正好可以通过这个项目来练手。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nei-ce&quot;&gt;内测&lt;&#x2F;h3&gt;
&lt;p&gt;其实就是拉人来玩。在常去的咖啡馆也邀请了店员来感受下这个游戏，有表示拼音不太友好的，但也有顺利玩下来并猜到答案的，看起来玩法上应该还 OK，拼音字母可能会是个障碍，但了解了玩法之后应该问题不大。也在小群里让小伙伴们体验了下。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shang-xian&quot;&gt;上线&lt;&#x2F;h3&gt;
&lt;p&gt;开发完上线后，在 &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;_limboy&#x2F;status&#x2F;1483622557782003712?s=20&quot;&gt;Twitter&lt;&#x2F;a&gt; 上发了一下，反响还不错，也收到了不少反馈。比如没有对输入做限制可以「作弊」，对字母判定上有一些疑惑，有的同学表示太难了，也有觉得简单的。结合这些反馈做了些调整，比如只能输入有效的拼音组合，对键盘做了字母高亮等，自己玩下来感觉难度正好。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chuan-bo&quot;&gt;传播&lt;&#x2F;h3&gt;
&lt;p&gt;经过几天的自然传播后，一天有几千 UV，Twitter 上搜索「pinyincaichengyu.com」也能看到有不少人在玩这个游戏。查看访问统计，一开始 Twitter 的来源最多，几天后从 Facebook、Google 和 Instagram 来的越来越多。有一段时间新加坡的玩家占了大多数。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fan-kui&quot;&gt;反馈&lt;&#x2F;h3&gt;
&lt;p&gt;Side Project 的成就感除了完成作品之外，还有很大一部分是用户的反馈。从来信才知道有不少国外的朋友在通过这个小游戏学习中文，也有教汉语的老师会在课后跟同学们一起玩这个游戏，有在新加坡的电台听到介绍这个游戏的。当然也有反馈游戏 Bug 和 Feature 的，比如词库里「厚积薄发」的「薄」声调被标记成了「bao」，然后那个时间段就收到了不少反馈该问题的来信。&lt;&#x2F;p&gt;
&lt;p&gt;因为游戏反响还不错，有国外的媒体来信希望了解这个游戏更多的信息，如澎湃新闻英文频道、卫报，也有国内媒体，这个确实是意料之外。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gai-jin&quot;&gt;改进&lt;&#x2F;h3&gt;
&lt;p&gt;第一版上线后，代码质量感觉还是不够好，于是从头开始又写了一遍，这次代码设计上更加合理，流程上也更加规范，加入了测试集和 Storybook，顺便把觉得不错的 Feature 如声调提示、统计信息、成语解释等给加上了，对 UI 也做了些优化。&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;idiom&amp;#x2F;popup.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;idiom&amp;#x2F;popup.jpg 672w,&amp;#x2F;posts&amp;#x2F;idiom&amp;#x2F;popup.jpg 672w&quot;
    sizes=&quot;(max-width: 672px) 100vw, 672px&quot; width=&quot;672&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;aside class=&quot;info&quot; &gt;
  加入「游戏统计」这块还有点小挑战，因为没有用户系统，只能通过设备来判断，而发给服务器的请求又很容易伪造，所以需要一套防护措施。采用的是客户端加密的方式，&lt;code&gt;import&lt;&#x2F;code&gt; 一段加密后的 js，然后生成一个全局变量（用来验证和避免重放攻击），因为这段 js 用到了很多浏览器相关的 API，所以不太好通过 cli 的方式直接引用（当然可以用 headless 工具，不过这也增加了成本）
&lt;&#x2F;aside&gt;&lt;h3 id=&quot;kai-yuan&quot;&gt;开源&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;idiom&quot;&gt;开源&lt;&#x2F;a&gt;就像是个节点，让这个小游戏的源码出现在了公共区域，虽然不一定会有多少人关注。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shou-huo&quot;&gt;收获&lt;&#x2F;h3&gt;
&lt;p&gt;通过这个项目更加熟悉了前端，包括工程化、React、CSS、JS、Browser API 等等，也感受到了 Side Project 的乐趣，更重要的是对自己的长处和短板有了更清晰的认识，为之后的发展方向选择提供了样本。&lt;&#x2F;p&gt;
</description>
        </item>
        
        
        <item>
            <title>关于 Bytetalk</title>
            <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/bytetalk/</link>
            <guid>https://limboy.me/posts/bytetalk/</guid>
            <description>&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;podcast&#x2F;6177bab6b69226ed16a3ed41&quot;&gt;Bytetalk&lt;&#x2F;a&gt; 是去年的一个尝试性项目，以访谈的形式与不同领域的程序员聊聊他们的故事。一方面可以拓展自己的视野，另一方面也能给听众一些启发。第一季 7 期录制下来，结果还不错，感谢各位嘉宾朋友和听众们。等接下来有了更明确的规划后，再来开始第二季。这里简单回顾下 Bytetalk 背后的一些故事。&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;bytetalk&amp;#x2F;data.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;bytetalk&amp;#x2F;data.jpg 1086w,&amp;#x2F;posts&amp;#x2F;bytetalk&amp;#x2F;data.jpg 1086w&quot;
    sizes=&quot;(max-width: 1086px) 100vw, 1086px&quot; width=&quot;1086&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;之所以选择播客，而不是更常见的视频，主要是因为自己在镜头前会变得不自然，访谈嘉宾可能也会有这方面的困扰，另一方面视频的录制和剪辑成本也会更高。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-yi-qi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;6177bab6b69226ed16a3ed42&quot;&gt;第一期&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;第一期节目尤为重要，因为在录制播客方面的经验几乎为零，所以需要容忍度高、能聊又互相熟悉的嘉宾。为此借着聚餐的名义，将字节的几个小伙伴「诱骗」到家里，期间还玩了会桥牌。因为是第一次录多人聊天，在设备调试这块就花了近半小时，好在最后的效果还能接受。&lt;&#x2F;p&gt;
&lt;p&gt;第一期节目没有特定的主题，主要围绕一些常见的话题展开讨论，如：如何保持对工作的热情，提升竞争力，度过 35 岁危机等等。因为相互之间比较熟悉，所以聊天的氛围还不错。在推上发了之后，也收到了些正面反馈。&lt;&#x2F;p&gt;
&lt;p&gt;通过这一期节目，基本把播客的整个制作流程摸熟了，但作为主持人还有很大的成长空间，同时录音质量把控和后期剪辑这两块还有待改善。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-er-qi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;618208328a9c9c36e9977e44&quot;&gt;第二期&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;有了第一次的经验，接下来找访谈对象时，会更有意识地去找有「聊点」的嘉宾，然后就想到了之前在凤凰网的同事，他现在已经在经营自己的潜水事业了，我很好奇他是如何进行这么大的跨行业转行。虽然好久没有联系，勾搭了之后，还是接受了邀请，这也给了我不小的信心。这一次是远程，访谈大纲和线上录制都通过飞书来完成，还挺顺利的（PS：那时还没有意识到录多轨音频的重要性 😂）。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-san-qi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;618c9897fad86a854205b2a0&quot;&gt;第三期&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;第三期我想邀请的嘉宾是&lt;a href=&quot;https:&#x2F;&#x2F;imtx.me&#x2F;&quot;&gt;图拉鼎&lt;&#x2F;a&gt;，我觉得应该会有很多人对独立开发者感兴趣，另一方面也好久没聊了，正好可以借录制播客聚聚。还会担心他档期比较紧或者对播客录制不太感冒，结果比我想的顺利。于是就找了一个茶馆，开始了第三期节目的录制&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;bytetalk&amp;#x2F;teahouse.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;bytetalk&amp;#x2F;teahouse.jpg 1000w,&amp;#x2F;posts&amp;#x2F;bytetalk&amp;#x2F;teahouse.jpg 1000w&quot;
    sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; width=&quot;1000&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;aside class=&quot;info&quot; &gt;
  &lt;strong&gt;一个小插曲:&lt;&#x2F;strong&gt; 由于收听次数较多，VPS 流量已经顶不住了，听众也反馈有卡顿的现象。图拉鼎建议可以试下 Cloudflare，果然非常有效，而且还是免费，一下就让我成了 Cloudflare 的粉丝，并以股票支持。（虽然买了之后就一路降降降···）
&lt;&#x2F;aside&gt;&lt;aside class=&quot;info&quot; &gt;
  &lt;strong&gt;另一个小插曲:&lt;&#x2F;strong&gt; 我妈也会听这个节目，她说这一期她最喜欢。
&lt;&#x2F;aside&gt;&lt;h3 id=&quot;di-si-qi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;61948a3ee2550ba6b3fa8f2b&quot;&gt;第四期&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;前三期节目播出后，收到了 &lt;a href=&quot;https:&#x2F;&#x2F;lutaonan.com&#x2F;&quot;&gt;Randy&lt;&#x2F;a&gt; 的来信，让我觉得特别惊喜，因为自己之前也有关注过他，正好可以做一期播客。这个过程中我也感受到了 Randy 的认真和专业。为了这次播客，他准备了非常详细的文稿，针对访谈大纲基本都有详细的回应文字，音频录制设备也很完善。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-wu-qi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;619c9a7515e2f7df2eca996e&quot;&gt;第五期&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;在寻找下一个嘉宾时，&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;yihong0618&quot;&gt;yihong&lt;&#x2F;a&gt; 出现在了我的视野，他的 running page、对跑步的坚持、对开源的热情、那股爱折腾的劲儿给我留了下了很深的印象，就想邀请他来聊一期，他也愉快地答应了。&lt;&#x2F;p&gt;
&lt;p&gt;这次的录制过程还有一些小插曲，我拉小蕊作为 co-host 来共同录制，结果我带上了收音设备，却忘了带上对应的连接线。然后就用了 AirPods 结合 iPhone 的录音。跟 yihong 一开始用的飞书视频，结果由于飞书对 VPN 的支持不好，导致通话效果不佳（后来才发现是 VPN 的原因），最后用的微信语音，双方各自录制自己的音轨，由于两边都缺少专业的录音设备，导致这次的音频效果不够理想（试了 GarageBand 的各种奇技淫巧，还是无法弥补音源质量上的不足）。&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot; &gt;
  &lt;strong&gt;PS:&lt;&#x2F;strong&gt; yihong 的东北话实在太有喜感了，哈哈。
&lt;&#x2F;aside&gt;&lt;h3 id=&quot;di-liu-qi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;61b43114f7b64dfb09f2524c&quot;&gt;第六期&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;因为自己开始逐渐关注前端，然后就发现 &lt;a href=&quot;https:&#x2F;&#x2F;antfu.me&#x2F;&quot;&gt;Anthony Fu&lt;&#x2F;a&gt; 在我的 Timeline 上出镜率很高，内容也都很棒。去了解了下之后，发现这位同学很不一样：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;antfu&quot;&gt;Github&lt;&#x2F;a&gt; 上有很多的 Sponsor，参与&#x2F;主导了一些很有影响力的开源项目，也会有一些很奇特的 Idea，用英文交流，习惯在国外的开源社区活动，Github Contribution 几乎全是绿的。这完全勾起了我的好奇心，很想了解这位神人背后的一些故事，于是就试探性地在推上发了邀请，没想到很快答应了。&lt;&#x2F;p&gt;
&lt;p&gt;Anthony 同学的语言表达和组织能力确实很强，全程我基本只要把问题抛过去，就能有较完整和流畅的回复。后期剪辑时还重新录制了下自己的那一轨音频（因为原先的那一轨有些瑕疵，加上我说的内容也较少 😂），导致听起来不像一个完整的访谈···&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-qi-qi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.xiaoyuzhoufm.com&#x2F;episode&#x2F;61c6cccac525309a443b5b36&quot;&gt;第七期&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;在跟 Randy 聊时，他有提到过 &lt;a href=&quot;https:&#x2F;&#x2F;logseq.com&#x2F;&quot;&gt;Logseq&lt;&#x2F;a&gt; 这款笔记利器，就去体验了下，然后就被惊到了。极低的输入成本，强大的双链和 Query，方便的 Journal，Privacy First，Local Data 等等。然后就想着要是能邀请 Logseq 的作者来聊聊就太好了，按照惯例，先在推上勾搭，没想到我跟作者&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tiensonqin&quot;&gt;天生&lt;&#x2F;a&gt;竟还有交集（同在花瓣工作过），他也答应了这次邀请。在推上发了这个消息后，&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;laike9m&quot;&gt;laike9m&lt;&#x2F;a&gt; 也有兴趣一起来聊聊，于是就有了这期的访谈，播出后反响也不错。天生的谦逊、对 logseq 的热情和 laike9m 的专业性都给我留下了很深的印象。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;jie-wei&quot;&gt;结尾&lt;&#x2F;h3&gt;
&lt;p&gt;制作 Bytetalk 的过程让我对播客有了更多的了解，也明白了其中的艰辛（寻找嘉宾，准备大纲，后期剪辑等等）。但看到大家的反馈就觉得这事值得，等我把这事思考地成熟些，就可以开始第二季了。&lt;&#x2F;p&gt;
</description>
        </item>
        
        
        <item>
            <title>Habbit 一个极简的习惯养成 App</title>
            <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/habbit/</link>
            <guid>https://limboy.me/posts/habbit/</guid>
            <description>&lt;h3 id=&quot;01-23-update&quot;&gt;01&#x2F;23 update&lt;&#x2F;h3&gt;
&lt;p&gt;源码放到了 github 上: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lzyy&#x2F;habbit&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;lzyy&#x2F;habbit&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;「习惯养成」是件大事，一个好习惯受用终生，一个坏习惯会让「更好的你」越来越远。时不时地会有那么几个瞬间下定决心要让美好的事情持续发生，而结果往往不太如意。这里面会有一些策略方面的因素，比如「每周跑 3 次步」比「这个月减 10 斤」更容易实施，也更容易达到减肥的效果。也会有一些战术方面的原因，比如没有好的工具或小团体的监督。最难的是，旧习惯就像一棵大树，现在要把它拔掉还要种上新的树更是难上加难。决心、策略、战术一个都不能少，其中前两个更多的是靠自己，第三个就是工具的施展空间，我希望有一款简单、够用，不需要花很多 willpower 的 App，于是就有了 &lt;a href=&quot;http:&#x2F;&#x2F;habbit.life&#x2F;&quot;&gt;Habbit&lt;&#x2F;a&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;habbit.life&#x2F;&quot;&gt;Habbit&lt;&#x2F;a&gt; 的设计理念是在能够完成核心功能的前提下尽可能地简单。对于「核心功能」的定义，我认为是可以每天 Check，同时方便浏览。这其中借用了 Jerry Seinfeld 用过的一个技巧：&amp;quot;Don&#x27;t break the chain.&amp;quot;。可能很多人对他不是很熟悉，这里简单介绍下，他是美国著名单人脱口秀喜剧演员，最出名的作品是在美国家喻户晓的的情景喜剧《宋飞正传》Seinfeld（1989 年至 1998 年），他在剧中扮演自己（嗯，九季我都看完了···）。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;He said the way to be a better comic was to create better jokes and the way to create better jokes was to write every day. He revealed a unique calendar system he uses to pressure himself to write.&lt;&#x2F;p&gt;
&lt;p&gt;He told me to get a big wall calendar that has a whole year on one page and hang it on a prominent wall. The next step was to get a big red magic marker.&lt;&#x2F;p&gt;
&lt;p&gt;He said for each day that I do my task of writing, I get to put a big red X over that day. &amp;quot;After a few days you&#x27;ll have a chain. Just keep at it and the chain will grow longer every day. You&#x27;ll like seeing that chain, especially when you get a few weeks under your belt. Your only job next is to not break the chain.&amp;quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;他的方法是在墙上挂一个日历，每天任务完成就画个 X。慢慢地当这些 X 连在一起时，你会不忍心中断。很简单的一个技巧，对他来说却很管用，于是我也希望有这么一个简单的 App，可以让我 Chain 一把。这就是 Habbit 的核心功能。&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;habbit&amp;#x2F;habbit-screenshot.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;habbit&amp;#x2F;habbit-screenshot.jpg 310.5w,&amp;#x2F;posts&amp;#x2F;habbit&amp;#x2F;habbit-screenshot.jpg 310.5w&quot;
    sizes=&quot;(max-width: 310.5px) 100vw, 310.5px&quot; width=&quot;310.5&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;很简单，希望能带来些帮助。&lt;&#x2F;p&gt;
</description>
        </item>
        
        
        <item>
            <title>时而不见</title>
            <pubDate>Sat, 18 Aug 2018 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/12hour/</link>
            <guid>https://limboy.me/posts/12hour/</guid>
            <description>&lt;p&gt;某天深夜，独自在床上辗转，忽然被深深的孤独感笼罩，那一刻，我想找到一个出口，一个不用担心身份，不用纠结于措辞，不用担心其他人看法的地方，最好第二天起来就不见了。就像深夜食堂一样，只在晚上营业，早上关门休息。&lt;&#x2F;p&gt;
&lt;p&gt;但是我找不到，所有的社交网络都需要一个账号，而 Note 显然也无法满足我的需求。&lt;&#x2F;p&gt;
&lt;p&gt;我喜欢泡咖啡馆，这个 app 应该像一个关了灯的咖啡馆，你说话会有人听到，可能会有回应，但不知道你是谁。&lt;&#x2F;p&gt;
&lt;p&gt;既然没有满足需求的产品，那就动手做一个吧。&lt;&#x2F;p&gt;
&lt;p&gt;一开始的想法是只在晚上 22 点开放，早上 7 点关门，因此最开始这个 app 的名字叫「2207」。做完后，发给几个朋友内测，感觉还蛮新奇的，会猜某个帖子是不是 xx 发的，也会对晚上 10 点多了份期待。后来更新 app 之后，他们要到晚上才能使用，就不够方便了。于是一个 idea 涌了上来：不如任何时段都可以，然后发完 12 个小时后，自动消失。&lt;&#x2F;p&gt;
&lt;p&gt;于是就有了「时而不见」这个 app。&lt;&#x2F;p&gt;
&lt;p&gt;
&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;12hour&amp;#x2F;2207-1.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;12hour&amp;#x2F;2207-1.jpg 310.5w,&amp;#x2F;posts&amp;#x2F;12hour&amp;#x2F;2207-1.jpg 310.5w&quot;
    sizes=&quot;(max-width: 310.5px) 100vw, 310.5px&quot; width=&quot;310.5&quot; &#x2F;&gt;&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;12hour&amp;#x2F;2207-2.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;12hour&amp;#x2F;2207-2.jpg 310.5w,&amp;#x2F;posts&amp;#x2F;12hour&amp;#x2F;2207-2.jpg 310.5w&quot;
    sizes=&quot;(max-width: 310.5px) 100vw, 310.5px&quot; width=&quot;310.5&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;&#x2F;p&gt;
&lt;p&gt;再来说说技术层面，一直想用 Swift 正经开发一个 App，这次终于如愿以偿。Swift 是我使用过的语言中最优雅的，就是 Xcode 后腿拖的比较严重，比如两个 block 一嵌套，自动提示就 gg 了，再加上不支持 Vim，开发效率上也是打了点折扣。后端语言选择了 Go，因为使用简单，性能也足够好，口碑和社区也都不错，服务托管在了 Google Cloud 上。&lt;&#x2F;p&gt;
&lt;p&gt;我希望这个 App 能够保持较小的体量，然后服务好这一小撮人，控制好内容。&lt;del&gt;为了避免麻烦，会选择不在国内上架。就不上 app store 了，不定期在&lt;a href=&quot;https:&#x2F;&#x2F;testflight.top&#x2F;t&#x2F;2eIzAb&quot;&gt;这里&lt;&#x2F;a&gt;放出可用名额。&lt;&#x2F;del&gt;&lt;&#x2F;p&gt;
</description>
        </item>
        
        
        <item>
            <title>开发Once Touch的一些感想和经验小结</title>
            <pubDate>Sat, 24 Nov 2012 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/once-touch-conclude/</link>
            <guid>https://limboy.me/posts/once-touch-conclude/</guid>
            <description>&lt;p&gt;Once Touch 是我开发的第一款 iOS 应用，这也延续了我每换一家公司就换一门语言的「优良」传统：ActionScript(时光网)-&amp;gt;PHP(凤凰网)-&amp;gt;Python(知乎)-&amp;gt;Objective-C(Legend33)。希望这次是最后的转型。&lt;&#x2F;p&gt;
&lt;p&gt;简单说说为什么选择 iOS 平台。主要有以下几个原因：&lt;&#x2F;p&gt;
&lt;h3 id=&quot;yong-hu-ji-shu&quot;&gt;用户基数&lt;&#x2F;h3&gt;
&lt;p&gt;iPhone 和 iPad 的总销量都是上亿的规模，所以不用担心会是个小众平台，但你会说 Android 的占有量比 iOS 要高得多，这就引出下一个原因：消费体验和消费习惯&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xiao-fei-ti-yan&quot;&gt;消费体验&lt;&#x2F;h3&gt;
&lt;p&gt;关联信用卡，点击两下按钮，输入密码就能完成了一次购买，简单几步，钱就流到了你的卡里，只要你的 app 足够优秀，足够吸引人。当然了，还要交给老大 30%的地摊费。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xiao-fei-xi-guan&quot;&gt;消费习惯&lt;&#x2F;h3&gt;
&lt;p&gt;虽然在国内越狱的 iPhone 还是呈现一统江湖状，但还是有那么一部分人愿意为优秀的 app 买单，而且随着支持国内的银行卡、系统升级、Gift Card 等原因，会有越来越多的人加入支付队伍。如果把眼光放在全球，就更不用纠结国内的悲惨现状。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chan-pin-pin-zhi&quot;&gt;产品品质&lt;&#x2F;h3&gt;
&lt;p&gt;尽管随着乔老爷的离去，苹果的产品开始被更多的人所诟病（当然我也在其中），但不可否认，它依旧是最好的产品，至少在我看来如此。给她一点时间去适应，去试错、去磨合，去找到自己的节奏，相信在 Android 的鞭策下，她还会带给我们更多的惊喜。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kai-fa-ti-yan&quot;&gt;开发体验&lt;&#x2F;h3&gt;
&lt;p&gt;第一次打开 Xcode 时，就喜欢上了这个界面，心想，以后如果能用它开发 app 会是件多么愉快的事情啊。Objective-C 虽然需要花点时间去适应它那有点别扭的语法，但过了适应期后，这种障碍就不存在了。Xcode 虽然偶尔会崩溃、出现莫名的错误、查文档很慢，基本上还是很称职的，在 2010 Air 上能有这样的表现我已经很满足了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;jin-ru-men-jian&quot;&gt;进入门槛&lt;&#x2F;h3&gt;
&lt;p&gt;相比 web 开发，iOS 的进入门槛明显要高不少：中文资料偏少、需要一套苹果的开发设备、有一定的编程经验。所以搞 iOS 开发的不少都是从其他语言转过来的。如果一项技能不好学，但学会了又很有用，你愿不愿意花时间去攻克它？&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;我的 iOS 学习之路，主要是这几个工具：&lt;a href=&quot;http:&#x2F;&#x2F;www.amazon.com&#x2F;Programming-Objective-C-Edition-Developers-Library&#x2F;dp&#x2F;0321811909&quot;&gt;Programming in Objective-C&lt;&#x2F;a&gt;、&lt;a href=&quot;https:&#x2F;&#x2F;itunes.apple.com&#x2F;itunes-u&#x2F;ipad-iphone-application-development&#x2F;id473757255?mt=10&quot;&gt;Stanford iPad and iPhone Application Development&lt;&#x2F;a&gt;、&lt;a href=&quot;http:&#x2F;&#x2F;www.stackoverflow.com&quot;&gt;StackOverflow&lt;&#x2F;a&gt;。接下来就是不断地练习了。Once Touch 的开发用到了 Cocos2d 框架，所以还看了&lt;a href=&quot;http:&#x2F;&#x2F;www.amazon.com&#x2F;Learn-cocos2d-Game-Development-Apress&#x2F;dp&#x2F;1430238135&#x2F;&quot;&gt;learn cocos2d game development with ios 5&lt;&#x2F;a&gt;这本书，了解基本的概念和使用。&lt;&#x2F;p&gt;
&lt;p&gt;开发 Once Touch 第一版的时候，架构想得不多，主要是以实现为主。但是跟所有项目一样，唯一不变的就是变化。在那个体系下要增加点变化会比较麻烦，常常是牵一发而动全身。即使这样，只要时间足够，这些变化还是可以被搞定的，所以国内的互联网公司常常需要很多人，因为低质量的代码需要更多的人去维护，而且周期也会变长，自然也就不敏捷了。&lt;&#x2F;p&gt;
&lt;p&gt;后来要开发 universal 版了，iPad、iPhone5 自然也都要支持，如果再在现有的代码上进行调整，我觉得对自己太残忍，以后也不好意思开源，索性就重新再写一遍吧。&lt;&#x2F;p&gt;
&lt;p&gt;这次重写的指导方针就是模块化编程，也就是多用组合，少用继承。比如 Once Touch 里的小球，可以移动、缩放，就可以把移动和缩放单独提出来作为两个模块，小球再通过 addChild 的方式把这两个模块添加进来，这样小球就可以移动和缩放了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wei-shi-yao-yao-duo-yong-zu-he-shao-yong-ji-cheng&quot;&gt;为什么要多用组合，少用继承&lt;&#x2F;h3&gt;
&lt;p&gt;先来看两张图片，第一张是国际空间站&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;once-touch-conclude&amp;#x2F;space-station.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;once-touch-conclude&amp;#x2F;space-station.jpg 364w,&amp;#x2F;posts&amp;#x2F;once-touch-conclude&amp;#x2F;space-station.jpg 364w&quot;
    sizes=&quot;(max-width: 364px) 100vw, 364px&quot; width=&quot;364&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;再来看看拆解图&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;once-touch-conclude&amp;#x2F;space-station-parts.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;once-touch-conclude&amp;#x2F;space-station-parts.jpg 364w,&amp;#x2F;posts&amp;#x2F;once-touch-conclude&amp;#x2F;space-station-parts.jpg 364w&quot;
    sizes=&quot;(max-width: 364px) 100vw, 364px&quot; width=&quot;364&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;看出模块的好处了吧，只要接口是对的，且功能也正常，这个模块是非洲产的，还是美国造的，都不 care。也就是说空间站完全不关心每个模块的内部实现。每个模块只要完成自己的功能就行了，出了问题，也只需要调整某一个模块，而不用担心会引发其他模块功能的异常。这其实就是 OO 设计里的 SOLID 原则。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xcode-de-wen-jian-guan-li&quot;&gt;Xcode 的文件管理&lt;&#x2F;h3&gt;
&lt;p&gt;之前的习惯是把文件都交给 Xcode 来管理，在 Xcode 里新建 Group，因为 Xcode 并不会在新建 Group 时在文件系统也新建文件夹，所以在 Project 在 Xcode 看起来挺整洁，到了文件系统就又是另一回事了。那能不能两全其美呢，当然是可以的，稍微改变下流程就行。不要在 Xcode 里新建 Group，先在文件系统中建立好文件夹，然后把文件夹拖到 Xcode 的目录中就可以了，以后在该 Group 下新建的文件都会出现在文件系统中对应的文件夹内。&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;once-touch-conclude&amp;#x2F;xcode-finder.png&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;once-touch-conclude&amp;#x2F;xcode-finder.png 222w,&amp;#x2F;posts&amp;#x2F;once-touch-conclude&amp;#x2F;xcode-finder.png 222w&quot;
    sizes=&quot;(max-width: 222px) 100vw, 222px&quot; width=&quot;222&quot; &#x2F;&gt;&lt;&#x2F;p&gt;&lt;h3 id=&quot;mu-lu-jie-gou&quot;&gt;目录结构&lt;&#x2F;h3&gt;
&lt;p&gt;从上面的图中可以看到我的目录结果，简单说明一下：&lt;&#x2F;p&gt;
&lt;h4 id=&quot;utils&quot;&gt;Utils&lt;&#x2F;h4&gt;
&lt;p&gt;这里放一些与应用无关的帮助类文件，如 Global.h &#x2F; Helper.h &#x2F; Macro.h 等等。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;components&quot;&gt;Components&lt;&#x2F;h4&gt;
&lt;p&gt;这是重头戏，所有的模块都会被放到这里。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;vendors&quot;&gt;Vendors&lt;&#x2F;h4&gt;
&lt;p&gt;这里放一些第三方的类库，如 MagicalRecord &#x2F; CCUIViewWrapper 等等。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;models&quot;&gt;Models&lt;&#x2F;h4&gt;
&lt;p&gt;与数据打交道的 Model 都会放到这里&lt;&#x2F;p&gt;
&lt;h4 id=&quot;config&quot;&gt;Config&lt;&#x2F;h4&gt;
&lt;p&gt;应用的默认设置，主要是一个 plist 文件&lt;&#x2F;p&gt;
&lt;h4 id=&quot;textures&quot;&gt;Textures&lt;&#x2F;h4&gt;
&lt;p&gt;这是一个比较特殊的文件夹，不是 Group，而是 Folder，也就是走的文件系统。这么做的原因是，把 iPad 和 iPhone 需要用到的资源分开存储（分别放到 iPad 和 iPhone 文件夹里），按需载入。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mo-kuai-de-li-du&quot;&gt;模块的粒度&lt;&#x2F;h3&gt;
&lt;p&gt;以这个画面为例&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;once-touch-conclude&amp;#x2F;once-touch-popup.jpg&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;once-touch-conclude&amp;#x2F;once-touch-popup.jpg 320w,&amp;#x2F;posts&amp;#x2F;once-touch-conclude&amp;#x2F;once-touch-popup.jpg 320w&quot;
    sizes=&quot;(max-width: 320px) 100vw, 320px&quot; width=&quot;320&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;应该把星星作为一个模块，还是把 3 个星星作为一个模块？分数有没有必要作为一个模块？左边黄色的那个圈呢？&lt;&#x2F;p&gt;
&lt;p&gt;如果模块的粒度划分过细，那么组装的过程就会很痛苦。想像一下某个 MM 拎着一堆电脑零件来找你组装台电脑，你信心满满地告诉她：几分钟搞定。等你打开箱子后发现，风扇、硬盘神马的都是以最小单位存在，还得先把这些附件先组装起来，看你崩不崩溃。&lt;&#x2F;p&gt;
&lt;p&gt;如果粒度划分过粗，就失去了模块的意义，基本上也无法复用了。一辆雪佛莱，如果说还能作为某个更大实体的零部件的话，估计也就只有擎天柱了。&lt;&#x2F;p&gt;
&lt;p&gt;所以恰当的粒度划分才会带来生产力的提升。还是以上面这张图为例，星星、钻石、分数和左边的圆，如果其他地方很少会单独使用到这些实体，就可以整体作为一个模块。当然如果将来其他模块会用到其中的某一部分，就需要重新拆分了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mo-kuai-yu-mu-ti-zhi-jian-de-tong-xin&quot;&gt;模块与母体之间的通信&lt;&#x2F;h3&gt;
&lt;p&gt;首先，模块之间是互盲的，A 模块不需要知道 B 模块的存在，更不能依赖 B 模块，这样才能解耦(话虽如此，实际上经常会自然不自然地与某个模块发生耦合)。模块只需要提供接口供母体使用就行了。当然在特定事件发生时，还需要通知母体，这就需要用到 delegate。有 delegate，自然也少不了 protocol。以小球为例，小球本身是一个模块，该模块又有移动和缩放两个子模块。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;movementcomponent&quot;&gt;MovementComponent&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;m&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-m &quot;&gt;&lt;code class=&quot;language-m&quot; data-lang=&quot;m&quot;&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@interface &lt;&#x2F;span&gt;&lt;span&gt;MovementComponent : &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;BaseComponent &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt; _radian; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 小球的半径
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt; _delay; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 小球是否需要延迟运动
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;BOOL&lt;&#x2F;span&gt;&lt;span&gt; _isOutSide; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 小球是否在外面，Challenge&#x2F;Endless模式会用到
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@property &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;nonatomic&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt; speed; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 小球的移动速度
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@property float&lt;&#x2F;span&gt;&lt;span&gt; delay; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 延迟时间
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@property &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;nonatomic&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;BOOL&lt;&#x2F;span&gt;&lt;span&gt; isOutSide; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 是否在外面
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;move&lt;&#x2F;span&gt;&lt;span&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 开始运动
&lt;&#x2F;span&gt;&lt;span&gt;- (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;stopMove&lt;&#x2F;span&gt;&lt;span&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 停止运动
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;zoomcomponent&quot;&gt;ZoomComponent&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;m&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-m &quot;&gt;&lt;code class=&quot;language-m&quot; data-lang=&quot;m&quot;&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@class&lt;&#x2F;span&gt;&lt;span&gt; ZoomComponent;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@protocol &lt;&#x2F;span&gt;&lt;span&gt;ZoomComponentProtocol &amp;lt;NSObject&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 当小球是最后一个球时，也就是得到perfect后，会有一个覆盖全屏的缩放
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 等到缩放完成后需要通知delegate
&lt;&#x2F;span&gt;&lt;span&gt;- (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;zoomComponentDidGiantZoomOut:&lt;&#x2F;span&gt;&lt;span&gt;(ZoomComponent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;zoomComponent&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;@optional
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 小球从最大缩放到最小后，需要通知delegate
&lt;&#x2F;span&gt;&lt;span&gt;- (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;zoomComponentDidZoomOut:&lt;&#x2F;span&gt;&lt;span&gt;(ZoomComponent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;zoomComponent&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@end
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@interface &lt;&#x2F;span&gt;&lt;span&gt;ZoomComponent : &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;BaseComponent &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;BOOL&lt;&#x2F;span&gt;&lt;span&gt; _pauseZoomOut; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 在Endless模式，最后一个球是不消失的，所以需要停止缩小
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;reInit&lt;&#x2F;span&gt;&lt;span&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 重新初始化，对已有小球的重复利用，用于Challenge&#x2F;Endless模式
&lt;&#x2F;span&gt;&lt;span&gt;- (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;zoomIn&lt;&#x2F;span&gt;&lt;span&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 放大
&lt;&#x2F;span&gt;&lt;span&gt;- (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;pauseZoomOut&lt;&#x2F;span&gt;&lt;span&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 停止缩小
&lt;&#x2F;span&gt;&lt;span&gt;- (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;resumeZoomOut&lt;&#x2F;span&gt;&lt;span&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 可以缩小
&lt;&#x2F;span&gt;&lt;span&gt;- (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;giantZoomIn&lt;&#x2F;span&gt;&lt;span&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 全屏放大
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@property &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;nonatomic&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;BOOL&lt;&#x2F;span&gt;&lt;span&gt; isSmall; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 当前是否为小球状态
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@property &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;nonatomic&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;BOOL&lt;&#x2F;span&gt;&lt;span&gt; isBig; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 当前是否为大球状态
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@property &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;nonatomic&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;BOOL&lt;&#x2F;span&gt;&lt;span&gt; isZoomIn; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 是否开始放大
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@property &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;nonatomic&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;BOOL&lt;&#x2F;span&gt;&lt;span&gt; isZoomOut; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 是否开始缩小
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@property &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;nonatomic&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;BOOL&lt;&#x2F;span&gt;&lt;span&gt; finishedZoom; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 是否已经完成了缩放整个流程
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@property &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;nonatomic&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt; zoomDuration; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 放大的时间
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@property &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;nonatomic&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt; bigDuration; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 大球状态停留的时间
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@property &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;nonatomic&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt; bigScale; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 放大到多少倍
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@property &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;nonatomic&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;weak&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;ZoomComponentProtocol&amp;gt; delegate; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 母体
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@end
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;ZoomComponent 里有一个 protocol 和一个 delegate，如果某个 object 想要添加 ZoomComponent，则必须实现 ZoomComponentProtocol 协议，并且把自己设置为 ZoomComponent 的 delegate，这样在相应的事件发生时，会自动触发协议里的几个方法。因为是小球添加了 MovementComponent 和 ZoomComponent，所以 BallComponent 需要实现 ZoomComponentProtocol&lt;&#x2F;p&gt;
&lt;h4 id=&quot;ballcomponent&quot;&gt;BallComponent&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;m&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-m &quot;&gt;&lt;code class=&quot;language-m&quot; data-lang=&quot;m&quot;&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;#import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;quot;ZoomComponent.h&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;@interface &lt;&#x2F;span&gt;&lt;span&gt;BallComponent : &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;BaseComponent&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;ZoomComponentProtocal&amp;gt;{
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; _index;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;BOOL&lt;&#x2F;span&gt;&lt;span&gt; _isMasterBall;
&lt;&#x2F;span&gt;&lt;span&gt;	ZoomComponent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;_zoomComponent;
&lt;&#x2F;span&gt;&lt;span&gt;	MovementComponent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;_movementComponent;
&lt;&#x2F;span&gt;&lt;span&gt;	CCSprite &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;_ballSprite;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这里又有问题了，Layer 添加了 BallComponent 后，需要调用 Ball 的一些方法和属性，如 isBig &#x2F; move 等等，对于 Ball 来说，其实就是调用 Zoom 和 Movement 对应的方法，如 ballComponent.isBig 其实就是 zoomComponent.isBig。那能不能对外暴露 zoomComponent 和 movementComponent 呢，如 ball.zoomComponent.isBig 或 [ball.movementComponent move]。这样不好，前面说过了，调用方不应该知道模块的内部实现，因为模块的内部是有可能变动的。所以，就只能进行二次封装，类似下面：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;m&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-m &quot;&gt;&lt;code class=&quot;language-m&quot; data-lang=&quot;m&quot;&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)setBigDuration&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt;)bigDuration
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;	_zoomComponent.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;bigDuration &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; bigDuration;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)setBigScale&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt;)bigScale
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;	_zoomComponent.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;bigScale &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; bigScale;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)setSpeed&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt;)speed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;	_movementComponent.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;speed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; speed;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)setDelay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt;)delay
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;	_movementComponent.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;delay &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; delay;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;初看起来会觉得挺累赘，但是从长远考虑这么做是值得的。显性好于隐性，这样能一下知道 ball 模块对外暴露了哪些方法。&lt;&#x2F;p&gt;
&lt;p&gt;添加模块和设置 delegate 的过程大体如下：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;m&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-m &quot;&gt;&lt;code class=&quot;language-m&quot; data-lang=&quot;m&quot;&gt;&lt;span&gt;_zoomComponent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[ZoomComponent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;node&lt;&#x2F;span&gt;&lt;span&gt;];
&lt;&#x2F;span&gt;&lt;span&gt;_zoomComponent.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;bigDuration &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; bigDuration;
&lt;&#x2F;span&gt;&lt;span&gt;_zoomComponent.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;bigScale &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; bigScale;
&lt;&#x2F;span&gt;&lt;span&gt;_zoomComponent.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;delegate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;self &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;addChild:_zoomComponent&lt;&#x2F;span&gt;&lt;span&gt;];
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;xiao-jie&quot;&gt;小结&lt;&#x2F;h3&gt;
&lt;p&gt;使用继承会使架构变得复杂，为了保证每个类都只有自己需要的方法，需要很小心地定义 public &#x2F; protected &#x2F; private 方法，尤其是对父类地改动更需小心，这种架构很难应对多变的环境。&lt;&#x2F;p&gt;
&lt;p&gt;使用组合可以让每一个模块专注于自己地功能，按需使用，模块的调整只要不影响接口，爱怎么折腾就怎么折腾，提升了自由度。&lt;&#x2F;p&gt;
&lt;p&gt;不过组合也是有副作用的，尤其是涉及到子模块，比如上面的 BallComponent，需要重新定义一遍接口，而继承的话就没有这个问题。有一些公共的属性和方法也可以通过继承来实现，比如所有的 Component 都继承自 BaseComponent。&lt;&#x2F;p&gt;
&lt;p&gt;所以尽量多用组合，少用继承。&lt;&#x2F;p&gt;
&lt;p&gt;一些我觉得还不错的资源：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.slideshare.net&#x2F;nzakas&#x2F;scalable-javascript-application-architecture&quot;&gt;Scalable JavaScript Application Architecture&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;49002&#x2F;prefer-composition-over-inheritance&quot;&gt;Prefer composition over inheritance?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;programmers.stackexchange.com&#x2F;q&#x2F;65179&quot;&gt;Where does this concept of “favor composition over inheritance” come from?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
        </item>
        
        
        <item>
            <title>写了个基于SQLAlchemy的ORM</title>
            <pubDate>Fri, 10 Feb 2012 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/introduce-thing-an-sqlalchemy-based-orm/</link>
            <guid>https://limboy.me/posts/introduce-thing-an-sqlalchemy-based-orm/</guid>
            <description>&lt;p&gt;看 Rails 时，觉得 Rails 的 ORM 用起来好方便，就想找找 python 有没有类似的，没发现太尽如人意的，就按照自己的意愿，基于 SQLAlchemy Core 重新写了个，取名为 Thing，项目主页: &amp;quot;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;thing&amp;quot;:https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;thing&lt;&#x2F;p&gt;
&lt;h3 id=&quot;zhu-yao-te-xing&quot;&gt;主要特性&lt;&#x2F;h3&gt;
&lt;h1 id=&quot;shi-yong-fang-bian-ling-huo&quot;&gt;使用方便，灵活&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;zhi-chi-yan-zheng&quot;&gt;支持验证&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;zhi-chi-shi-jian-hong-fa&quot;&gt;支持事件触发&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;zhi-chi-duo-shu-ju-ku-lian-jie&quot;&gt;支持多数据库连接&lt;&#x2F;h1&gt;
&lt;p&gt;不想把 ORM 做得太 magic，将来优化起来会不太方便，所以只是简单地封装了下，既保证了使用起来比较方便，将来涉及到分库分表或缓存时也可以从容应付。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;an-zhuang&quot;&gt;安装&lt;&#x2F;h3&gt;
&lt;p&gt;推荐使用 virtualenvwrapper&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;py&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-py &quot;&gt;&lt;code class=&quot;language-py&quot; data-lang=&quot;py&quot;&gt;&lt;span&gt;mkvirtualenv thing
&lt;&#x2F;span&gt;&lt;span&gt;cdvirtualenv
&lt;&#x2F;span&gt;&lt;span&gt;pip install &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;quot;git+git:&#x2F;&#x2F;github.com&#x2F;lzyy&#x2F;thing.git&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;chuang-jian-mo-xing&quot;&gt;创建模型&lt;&#x2F;h3&gt;
&lt;p&gt;创建一个继承 Thing 的基类，主要是设置数据库连接&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;py&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-py &quot;&gt;&lt;code class=&quot;language-py&quot; data-lang=&quot;py&quot;&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;sqlalchemy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;create_engine
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;thing
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;master_engine &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;create_engine&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;mysql:&#x2F;&#x2F;root:123456@localhost:3306&#x2F;test&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;slave_engine &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;create_engine&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;mysql:&#x2F;&#x2F;root:123456@localhost:3307&#x2F;test&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;BaseThing&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;thing.Thing&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;__init__&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;thing.Thing.__init__(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;master&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;: master_engine,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;                                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;slave&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;: slave_engine})
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;h5. 注意事项：&lt;&#x2F;p&gt;
&lt;h1 id=&quot;suo-you-de-mo-xing-lei-du-yao-ji-cheng-basething&quot;&gt;所有的模型类都要继承 BaseThing&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;ru-guo-mei-you-zai-zi-lei-li-ding-yi-tablename-ze-mo-ren-shi-yong-xiao-xie-de-zi-lei-ming-zuo-wei-biao-ming&quot;&gt;如果没有在子类里定义_tablename，则默认使用小写的子类名作为表名&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;biao-zi-duan-hui-bei-zi-dong-huo-qu&quot;&gt;表字段会被自动获取&lt;&#x2F;h1&gt;
&lt;p&gt;假设有这么个场景：一个用户有多个答案，每个答案可以被多人投票。我们可以新建 3 个 Model&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;py&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-py &quot;&gt;&lt;code class=&quot;language-py&quot; data-lang=&quot;py&quot;&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;thing
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;sqlalchemy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;create_engine
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;formencode &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;validators
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;blinker &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;signal
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;vote_before_insert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;signal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;vote.before_insert&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Member&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;BaseThing&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;# 验证email字段
&lt;&#x2F;span&gt;&lt;span&gt;    email &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;validators.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;Email&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;messages &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;noAt&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;u&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;invalid email&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;})
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    @&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;property
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;answers&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;Answer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;where&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;member_id&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;.id)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Answer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;BaseThing&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    @&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;property
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;votes&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;Vote&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;where&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;answer_id&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;.id)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    @vote_before_insert.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;connect
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;_vote_before_insert&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;vote&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;data&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;vote.answer.title &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;test&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            vote.errors &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;answer&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;signal test&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Vote&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;BaseThing&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    @&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;property
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;member&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;Member&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;where&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;id&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;.member_id).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;find&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    @&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;property
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;answer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;Answer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;where&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;id&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;.answer_id).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;find&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;用户与答案是一对多的关系，这里通过@property 装饰器来实现，在 answers 方法内，可以很灵活地实现答案获取的方法。&lt;&#x2F;p&gt;
&lt;p&gt;在 Answer 模型里有一个 vote_before_insert 装饰器，在 vote 执行 insert 操作前_vote_before_insert 方法会被触发，可以在这里做很多事，如缓存的处理，数据的验证等等。如果验证不通过，可以设置 sender 的 errors 属性，该属性一旦被设置，后续的操作将被中断，在这里 vote 就不会执行 insert 操作。&lt;&#x2F;p&gt;
&lt;p&gt;h5. 注意事项：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f9f9f9;color:#111111;&quot;&gt;&lt;code&gt;&lt;span&gt;# 验证使用的是formencode，这个库支持很多的验证操作，&amp;quot;http:&#x2F;&#x2F;www.formencode.org&#x2F;en&#x2F;latest&#x2F;Validator.html&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;# 一共有6类事件：model.before_validation &#x2F; after_validation &#x2F; before_insert &#x2F; after_insert &#x2F; before_update &#x2F; after_update
&lt;&#x2F;span&gt;&lt;span&gt;# 事件触发时第一个参数为model本身，第二个参数为数据，如果在某个事件响应函数处，设置了model.errors属性，则此次事件之后的代码都不会执行。
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;shi-yong&quot;&gt;使用&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;lie-chu-yi-ge-yong-hu-de-id-10-de-suo-you-hui-da-mei-ci-qu-10-ge&quot;&gt;列出一个用户的 id&amp;gt;10 的所有回答，每次取 10 个&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;py&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-py &quot;&gt;&lt;code class=&quot;language-py&quot; data-lang=&quot;py&quot;&gt;&lt;span&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;Member&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;find&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;answer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;member.answers.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;where&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;id&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;&amp;gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;findall&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;limit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;offset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;print &lt;&#x2F;span&gt;&lt;span&gt;answer.title
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;chuang-jian-xin-yong-hu&quot;&gt;创建新用户&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;py&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-py &quot;&gt;&lt;code class=&quot;language-py&quot; data-lang=&quot;py&quot;&gt;&lt;span&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;Member&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;member.email &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;foo@bar.com&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;member.password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;123&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;member.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;save&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;print &lt;&#x2F;span&gt;&lt;span&gt;member.saved &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;# True
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;print &lt;&#x2F;span&gt;&lt;span&gt;member.email &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;# foo@bar.com
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;geng-xin-yong-hu-xin-xi&quot;&gt;更新用户信息&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;py&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-py &quot;&gt;&lt;code class=&quot;language-py&quot; data-lang=&quot;py&quot;&gt;&lt;span&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;Member&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;find&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;member.email &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;foo@bar.com&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;member.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;save&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;print &lt;&#x2F;span&gt;&lt;span&gt;member.saved &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;# True
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;print &lt;&#x2F;span&gt;&lt;span&gt;member.email &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;# foo@bar.com
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;yan-zheng-xin-xi&quot;&gt;验证信息&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;py&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-py &quot;&gt;&lt;code class=&quot;language-py&quot; data-lang=&quot;py&quot;&gt;&lt;span&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;Member&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;member.password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;123&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;member.email &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;foo&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;member.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;save&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;print &lt;&#x2F;span&gt;&lt;span&gt;member.errors[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;email&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;# invalid email
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;duo-shu-ju-ku-lian-jie&quot;&gt;多数据库连接&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;py&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-py &quot;&gt;&lt;code class=&quot;language-py&quot; data-lang=&quot;py&quot;&gt;&lt;span&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;Member&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;find&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;slave&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;在执行 find &#x2F; findall &#x2F; save 操作时，有一个 db_section 选项，如果忽略，则默认使用初始化时传入的 engide dict 的第一项，在这里就是 master，如果想选择其他的数据库，传入该数据库对应的 key 就行，比如 slave&lt;&#x2F;p&gt;
&lt;h3 id=&quot;qi-ta&quot;&gt;其他&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f9f9f9;color:#111111;&quot;&gt;&lt;code&gt;&lt;span&gt;# 查看某次插入或更新是否成功，可以检查errors属性，如果为空表示执行成功
&lt;&#x2F;span&gt;&lt;span&gt;# 如果model的key中包含主键，如id，则执行save时是一个更新操作，否则为插入
&lt;&#x2F;span&gt;&lt;span&gt;# 欢迎fork &#x2F; test &#x2F; feedback
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</description>
        </item>
        
        
        <item>
            <title>使用python和redis实现实时聊天室</title>
            <pubDate>Wed, 26 Oct 2011 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/python-comet/</link>
            <guid>https://limboy.me/posts/python-comet/</guid>
            <description>&lt;p&gt;实时的实现一般有 ajax long poll &#x2F; iframe stream &#x2F; websocket 这三种。websocket 有浏览器的限制;iframe 会使页面一直处于 loading 状态(如果没有这个限制，iframe stream 相比 long poll 还是比较有优势的); ajax long poll 因为它的跨浏览器特性，加上实现比较简单，所以不少的实时应用都选择了 long poll, 这里也选择 ajax long poll 来实现&lt;&#x2F;p&gt;
&lt;p&gt;放个截图先：&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;python-comet&amp;#x2F;comet_chat.png&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;python-comet&amp;#x2F;comet_chat.png 303w,&amp;#x2F;posts&amp;#x2F;python-comet&amp;#x2F;comet_chat.png 303w&quot;
    sizes=&quot;(max-width: 303px) 100vw, 303px&quot; width=&quot;303&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;主要工具：python (flask &#x2F; gevent &#x2F; apscheduler) + redis&lt;&#x2F;p&gt;
&lt;p&gt;目前这个聊天室的功能还比较简单，可以实时更新全局在线用户，当前聊天室在线用户和聊天内容，都是通过一个 ajax 长连接实现的。在这个连接里定义了需要实时的内容，相应的内容一旦在服务端更新，可以马上推送到各个客户端。&lt;&#x2F;p&gt;
&lt;p&gt;实时最大的挑战在于如何能在服务端尽量简单，灵活地实现。因为越是简单，就越不容易滋生 bug，即使出现问题，查找起来也很方便;越是灵活，就越容易应付多变的需求。以聊天室为例，当新用户加入后需要更新所有客户端的当前成员列表;有成员退出后也要更新该列表。每个聊天室有了新内容后都要实时推到所有客户端;给某个用户发私信，对方也可以实时收到。这些如果处理地不好，很容易与当前的逻辑发生耦合，为将来的调整和 bug 的查找带来困难。&lt;&#x2F;p&gt;
&lt;p&gt;依靠强大的 redis，设计了这个简易的实时聊天室，基本架构如下:&lt;&#x2F;p&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;python-comet&amp;#x2F;comet_arch.png&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;python-comet&amp;#x2F;comet_arch.png 243.5w,&amp;#x2F;posts&amp;#x2F;python-comet&amp;#x2F;comet_arch.png 243.5w&quot;
    sizes=&quot;(max-width: 243.5px) 100vw, 243.5px&quot; width=&quot;243.5&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;匆忙完成了初步的代码，还有不少需要优化的地方，有些功能也还没加上（如私信的实时通知）。接下来的一段时间内会逐步完善，如果有更好的 idea，欢迎沟通 :)&lt;&#x2F;p&gt;
&lt;p&gt;代码地址：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;chat&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;chat&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;如果使用过程中遇到什么问题，或有好的建议可以在&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;chat&#x2F;issues&quot;&gt;这里&lt;&#x2F;a&gt;反馈&lt;&#x2F;p&gt;
&lt;h3 id=&quot;version-0-2&quot;&gt;version 0.2&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;调整了实时的策略，抛弃 pubsub 模式，使用 zset+timestamp。同时修正了在聊天内容频繁发送时会丢部分信息的 bug&lt;&#x2F;li&gt;
&lt;li&gt;添加了管理员角色（目前只能用于删除聊天室）&lt;&#x2F;li&gt;
&lt;li&gt;修正重复名的 bug（无法完全避免，只能在登录时验证）&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;version-0-1-1&quot;&gt;version 0.1.1&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;调整了添加聊天室的体验&lt;&#x2F;li&gt;
&lt;li&gt;更快的聊天内容显示速度&lt;&#x2F;li&gt;
&lt;li&gt;可以删除自己创建的聊天室&lt;&#x2F;li&gt;
&lt;li&gt;bugfixes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;version-0-1&quot;&gt;version 0.1&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;intro&quot;&gt;intro&lt;&#x2F;h4&gt;
&lt;p&gt;某天晚上打球回来，到家已将近 11 点，洗完澡，代码敲到 2 点左右倒下，天还没亮就被猫叫醒，醒来后就一直想如何改进这个聊天室，觉得能在一个页面实时看到每个聊天室的内容，还是很酷的，于是就按着这个想法实现了。&lt;&#x2F;p&gt;
&lt;p&gt;PS: 如果不是全新安装，需要执行 bin&#x2F;python scripts&#x2F;clear_key.py 来清除 redis cache&lt;&#x2F;p&gt;
&lt;h4 id=&quot;changelog&quot;&gt;changelog&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;可以自定义昵称&lt;&#x2F;li&gt;
&lt;li&gt;调整了聊天页的内容和样式&lt;&#x2F;li&gt;
&lt;li&gt;添加了 home 页（显示所有的聊天室，并实时更新每个聊天室的内容）&lt;&#x2F;li&gt;
&lt;li&gt;使用 coffee-script 重写了 js 部分&lt;&#x2F;li&gt;
&lt;li&gt;bugfixes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;screenshot&quot;&gt;screenshot&lt;&#x2F;h4&gt;

&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;python-comet&amp;#x2F;comet_home_0.1.png&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;python-comet&amp;#x2F;comet_home_0.1.png 307w,&amp;#x2F;posts&amp;#x2F;python-comet&amp;#x2F;comet_home_0.1.png 307w&quot;
    sizes=&quot;(max-width: 307px) 100vw, 307px&quot; width=&quot;307&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p  style=&quot;text-align:center&quot; &gt;&lt;img src=&quot;&amp;#x2F;posts&amp;#x2F;python-comet&amp;#x2F;comet_room_0.1.gif&quot;
    srcset=&quot;&amp;#x2F;posts&amp;#x2F;python-comet&amp;#x2F;comet_room_0.1.gif 307w,&amp;#x2F;posts&amp;#x2F;python-comet&amp;#x2F;comet_room_0.1.gif 307w&quot;
    sizes=&quot;(max-width: 307px) 100vw, 307px&quot; width=&quot;307&quot; &#x2F;&gt;&lt;&#x2F;p&gt;</description>
        </item>
        
        
        <item>
            <title>做完猜电影的一点感想</title>
            <pubDate>Mon, 30 May 2011 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/iguess-feeling/</link>
            <guid>https://limboy.me/posts/iguess-feeling/</guid>
            <description>&lt;p&gt;如果你认真，持续地去做了一件事，几乎不可能没有收获。&lt;a href=&quot;http:&#x2F;&#x2F;iguess.me&quot;&gt;猜电影&lt;&#x2F;a&gt;这个业余项目也断断续续进行了将近 20 天，从 GAE 到 VPS，从 python 到 PHP，反正就是各种折腾，现在成品基本上出来了，当然还有很多需要完善和改进的，&lt;a href=&quot;http:&#x2F;&#x2F;iguess.me&quot;&gt;欢迎访问&lt;&#x2F;a&gt; :)。以下是一些我的小感想&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ni-neng-zai-ling-chen-4-dian-ban-qi-lai-ma&quot;&gt;你能在凌晨 4 点半起来吗？&lt;&#x2F;h3&gt;
&lt;p&gt;早起其实不难，如果你对这一天充满了期待，或者急不可耐地想要去做一件事。做这个项目的时候，经常会有一些有意思的想法，然后就恨不得马上去实现，但是太晚了，而且工作了一天后，晚上的效率也不高。于是只能放到凌晨，我清楚地记得那天给自己定了 4 点半的闹钟，结果 3 点醒来后，就再也睡不着了，于是从 3 点一直开发到早上 7 点多，再睡一个小回笼觉到 8 点多，就屁颠屁颠地上班去了。上班时的感觉也很好，因为一块大石头已经放到杯子里，有底了。&lt;&#x2F;p&gt;
&lt;p&gt;记得当年从时光网辞职后，在家帮朋友开发一个手机社区，也有过一阵类似的感觉，当然那时自由多了，想几点起就几点起，起床后可以痛快地做自己的项目，现在还真有点怀念。&lt;&#x2F;p&gt;
&lt;p&gt;37signals 的招聘中写到：认同一个伟大的工作并驱动自己，这非常重要。不知道大家对自己的工作还有没有激情，有没有憧憬，有没有感觉到挑战，如果没有或者比较少，又是如何释放自己的激情，为什么不到一个更广阔的空间？&lt;&#x2F;p&gt;
&lt;p&gt;国内有梦想的公司不少，或者说，每个公司都应该有自己的梦想吧，或大或小，或远或近而已。但你真的能够认同吗？你发自肺腑地希望公司能够蒸蒸日上吗？在公司最困难的时候，你愿意留下来吗？答案很可能是否定的。公司不是我们的归宿，她只是与我们进行着一笔交易，她出钱，我们出时间和技能。最危险的是我们会渐渐地习惯这个交易，以为人生本应如此，梦想这玩意不现实。呵呵，有点扯远了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;biao-mian-kan-qi-lai-jian-dan-de-shi-zuo-qi-lai-zhen-bu-jian-dan&quot;&gt;表面看起来简单的事，做起来真不简单&lt;&#x2F;h3&gt;
&lt;p&gt;这也是我喜欢苹果的一个原因，她可以让一个操作尽量简单，易懂，一用就会，但是易用的背后往往包含着很复杂的处理过程。这才是用户至上。写猜电影的时候，我常常会想: 这个功能应该怎样在页面上体现，应该怎样交互用户才不会迷茫，是否有必要加一个提交按钮，loading 效果怎样做才看着比较舒服等等。当然，如果只是想实现这个功能就没必要费这个周折了。&lt;&#x2F;p&gt;
&lt;p&gt;前期只需要完成最核心的功能，让用户可以无障碍地使用，功能尽量少，但每个功能都要做到看着舒服，用着流畅。功能越少，用户越不容易迷茫，后期再推出新功能时，也更加能接受。好比税收一样，一下子扣去一年的税和分月扣，虽然结果是一样的，但哪个更能接受？&lt;&#x2F;p&gt;
&lt;p&gt;要有追求完美的心态。就拿那个投票来说吧，看上去很简单的上下箭头加上中间的数字，其实要考虑的因素有不少：是否已登入？是否之前投过票？投过票的话是否要高亮显示？是否是自己发的帖子？如何防止多次投票？等等。要做到完美并不容易。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ji-de-zhong-gou&quot;&gt;记得重构&lt;&#x2F;h3&gt;
&lt;p&gt;一开始为了能尽快出第一个版本，往往对代码的质量就不那么讲究，这很正常，说正确也无妨。敏捷嘛，就是要讲究快速发布版本，但庞大的函数，一段又一段又一段的 if else 判断，臃肿的类，无意义的数字、变量，重复的代码等等，这些虽然成功地帮助你实现了最基本的功能，但如果放任不管，将来开发新功能，或修改 bug 时就够你受的了，这也严重影响了下一版本的发布。&lt;&#x2F;p&gt;
&lt;p&gt;如果代码量已经挺大了，且可重构部分还不少，那就有点不妙了，不过好在自己写的代码最熟悉，多费点时间还是可以重构地差不多的。不过更好的方法是持续重构，也就是隔三差五地让自己的代码变得更优雅。软件开发就是与熵的战斗，如果不用心，熵就会很大，结果嘛，你懂的:)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bu-yao-gei-zi-ji-tie-biao-qian&quot;&gt;不要给自己贴标签&lt;&#x2F;h3&gt;
&lt;p&gt;我是个 PHP 程序员，不会设计，不会 js，不会前端交互，无法独立完成一个网站。
我是个编辑，要我使用 SQL 语句，天哪，杀了我吧(我从朋友的口中得知，他们公司有如此 BT 的编辑存在)。
我是个产品经理，我不需要动那些具体的技术细节，我只要把我的想法表达清楚就好了。&lt;&#x2F;p&gt;
&lt;p&gt;老罗当年招了好几茬设计都没有一个合适的，到最后不也是自己上嘛，那可是老罗啊，一个相声表演艺术家，自学设计，貌似效果还不错。&lt;&#x2F;p&gt;
&lt;p&gt;爱给自己贴标签的人，往往在他自己的领域也难有太大的建树，因为如果你是一个 PHP 程序员，你可以拒绝学习 linux，mysql，nginx，设计模式，等等，也可以拒绝了解 PHP 内部的运行机制，因为你可以告诉自己：我是一个普通的 php 程序员，不需要了解这些。其实说白了，还是对自己学习能力的不自信，没有刨根问底的精神，没有探索未知领域的意愿。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xiang-de-shao-wei-chang-yuan-yi-dian&quot;&gt;想得稍微长远一点&lt;&#x2F;h3&gt;
&lt;p&gt;比如，花了很长的时间，终于把你的作品熬出来了，然后呢？怎么让目标用户知道并且喜欢上你的作品？哎，我是个天真的程序员，总是幻想着，我把一个 idea 实现了，慢慢地就会有人来用，然后慢慢地他们会口口相传。我的目标不是有多少用户数，我只在乎我的这个应用能为多少人带来便利，能为多少人解决问题。虽然如此，看着自己消耗了那么多的 ATP，做出来的东西没人用，难免会有点伤感。&lt;&#x2F;p&gt;
&lt;p&gt;所以除非只是想练练手，不然最好想一下如何去推广，除非你在该领域有足够的影响力或资源。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xiao-jie&quot;&gt;小结&lt;&#x2F;h3&gt;
&lt;p&gt;鉴于我懒得推广，又想做点能够影响一批人的东东，所以我打算以后多花点时间在正事上，把基本功练好，加入一个靠谱的团队。十个巴掌怎么也比一个巴掌拍得响。&lt;&#x2F;p&gt;
&lt;p&gt;有不少人担心程序员是吃青春饭的，过了 30，就会力不从心，到时要么做管理要么转行。有了这个想法后，就更不可能用心地去写程序，去思考。恶性循环就这么产生了。我倒愿意相信，各行各业之间是相通的。计算机系统是如此地神奇，算法是如此地考验脑力，linux 是如此地优雅。如果真的把程序搞得很明白透彻了，其间你所收获的知识，经验一定可以运用到(至少是部分)其他领域，这也是达芬奇老人家能够精通多门领域的一个原因吧。&lt;&#x2F;p&gt;
</description>
        </item>
        
        
        <item>
            <title>做了个猜电影的小应用</title>
            <pubDate>Thu, 12 May 2011 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/iguess/</link>
            <guid>https://limboy.me/posts/iguess/</guid>
            <description>&lt;p&gt;话说前一阵子和朋友出去聚餐，闲着没事，就想来猜电影，但是各种搜索，都没找到一个比较靠谱的地方，于是俺就打算做一个猜电影的小应用&lt;&#x2F;p&gt;
&lt;p&gt;目前该应用的功能还很简单，就是你给出一段台词，让用户猜这段台词是哪部电影的。更多的后续功能正在悄悄开发中，欢迎使用和反馈 :)&lt;&#x2F;p&gt;
&lt;p&gt;应用地址：&lt;a href=&quot;http:&#x2F;&#x2F;iguess.leezhong.com&quot;&gt;iguess.leezhong.com&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;-PS: Mobile Friendly-&lt;&#x2F;p&gt;
&lt;h3 id=&quot;11-05-14&quot;&gt;11&#x2F;05&#x2F;14&lt;&#x2F;h3&gt;
&lt;p&gt;绑定新域名：&lt;a href=&quot;http:&#x2F;&#x2F;www.iguess.me&quot;&gt;www.iguess.me&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;11-05-17&quot;&gt;11&#x2F;05&#x2F;17&lt;&#x2F;h3&gt;
&lt;p&gt;开源: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;iguess&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;iguess&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;11-05-29&quot;&gt;11&#x2F;05&#x2F;29&lt;&#x2F;h3&gt;
&lt;p&gt;用 PHP 重写了整个应用，放在自己的 VPS 上&lt;&#x2F;p&gt;
&lt;h3 id=&quot;11-05-30&quot;&gt;11&#x2F;05&#x2F;30&lt;&#x2F;h3&gt;
&lt;p&gt;添加了一组默认头像&lt;&#x2F;p&gt;
&lt;h3 id=&quot;11-06-04&quot;&gt;11&#x2F;06&#x2F;04&lt;&#x2F;h3&gt;
&lt;p&gt;添加了独立 URL 页面
添加了评论功能&lt;&#x2F;p&gt;
</description>
        </item>
        
        
        <item>
            <title>发布一款PHP模块系统——Witty</title>
            <pubDate>Mon, 17 Jan 2011 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/witty/</link>
            <guid>https://limboy.me/posts/witty/</guid>
            <description>&lt;p&gt;关于&lt;a href=&quot;http:&#x2F;&#x2F;witty.leezhong.com&quot;&gt;Witty&lt;&#x2F;a&gt;，有太多想说的了。&lt;&#x2F;p&gt;
&lt;p&gt;先来说说名字。本来一直想往 KISS 上靠，但是 KISSPHP 已经有了，Kissy 也被淘宝前端团队用了，绞尽脑汁也想不出优雅的跟 KISS 相关的名字，于是先作罢。后来在看书时，无意中看到了&amp;quot;Witty&amp;quot;，看着，念着都很舒服，意思也挺靠谱(风趣的；巧妙的；机智的)，就决定用她了。&lt;&#x2F;p&gt;
&lt;p&gt;再来说说开发 Witty 的初衷。这个是受 python 启发，python 可以把自己开发的类库上传到&lt;a href=&quot;http:&#x2F;&#x2F;pypi.python.org&#x2F;pypi&quot;&gt;pypi&lt;&#x2F;a&gt;，这样就可以通过 easy_install 或 pip 安装了，甚是方便。而且这些库都可以独立使用(即使有依赖关系，easy_install&#x2F;pip 也会自动处理)。本来这件事应该是 pear 来做的，但 pear 的开发规范太复杂，安装也比较麻烦，略显重量级。很多框架其实自带了很多好用的类库，但一般都需要依赖框架本身。Zend Framework 可以把类库单独拿出来，但也有不少问题，比如配置不统一、没有统一的初始化方法、每个模块没有放到单独的文件夹里、没有命令行安装功能等等。于是创建 Witty 的想法就这么诞生了。&lt;&#x2F;p&gt;
&lt;p&gt;Witty 官网架在 GAE 上，这也是我第一次使用 GAE，python+gae 的组合开发一些小项目真是太方便了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shi-yao-shi-witty&quot;&gt;什么是 Witty&lt;&#x2F;h3&gt;
&lt;p&gt;Witty 想做的事很简单：方便模块开发，方便上传，方便安装，方便使用。&lt;&#x2F;p&gt;
&lt;p&gt;Witty 提供了一些简单的模块开发标准，程序员可以按照这些标准写自己的模块，然后上传到网站，这样其他用户就可以通过简单的命令下载，使用该模块了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;witty-de-an-zhuang-he-shi-yong&quot;&gt;Witty 的安装和使用&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span&gt;# install
&lt;&#x2F;span&gt;&lt;span&gt;wget http:&#x2F;&#x2F;witty.leezhong.com&#x2F;static&#x2F;witty
&lt;&#x2F;span&gt;&lt;span&gt;chmod +x witty
&lt;&#x2F;span&gt;&lt;span&gt;.&#x2F;witty install
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# install module
&lt;&#x2F;span&gt;&lt;span&gt;.&#x2F;witty install http
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# usage
&lt;&#x2F;span&gt;&lt;span&gt;require_once &amp;#39;&#x2F;path&#x2F;to&#x2F;witty.php&amp;#39;;
&lt;&#x2F;span&gt;&lt;span&gt;Witty::init();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;$http = Witty::instance(&amp;#39;Http&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;$http-&amp;gt;execute(&amp;#39;http:&#x2F;&#x2F;www.douban.com&amp;#39;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Witty 类提供了两个初始化方法 instance 和 factory，所以模块不需要自己实现单例和工厂。&lt;&#x2F;p&gt;
&lt;p&gt;如果模块有一些配置参数，可以在 instance 或 factory 时传入，如&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$config &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;redirect&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$http &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Witty&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;instance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;Http&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;只要 Http 类继承了 Config 类就行了。&lt;&#x2F;p&gt;
&lt;p&gt;也可以指定文件夹，让 Witty 自己去找 config 文件，然后传入参数。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;require_once &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;&#x2F;path&#x2F;to&#x2F;witty.php&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Witty&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;init&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Witty&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;set_config_dir&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;&#x2F;path&#x2F;to&#x2F;config&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; &#x2F;path&#x2F;to&#x2F;config&#x2F;http.PHP
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; &amp;lt;?php
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; return array(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 	&amp;#39;Http&amp;#39; =&amp;gt; array( &#x2F;&#x2F;Http为类名
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 		&amp;#39;redirect&amp;#39; =&amp;gt; false,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 	),
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 虽然没有传参数，但因为设置了config文件夹，Witty会先找到config&#x2F;http.php
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 然后找到Http key，传入该key对应的value
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$http &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Witty&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;instance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;Http&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;更多详情，请浏览&lt;a href=&quot;http:&#x2F;&#x2F;witty.leezhong.com&#x2F;doc&quot;&gt;Witty 官网&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;PS: E 文水平有限，欢迎指出有语病的语句，如果太多的话，可以 Email(healdream#gmail.com)我。&lt;&#x2F;p&gt;
</description>
        </item>
        
        
        <item>
            <title>同步twitter到新浪微博的php脚本(不需要twitter密码)</title>
            <pubDate>Wed, 08 Dec 2010 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/twitter2weibo/</link>
            <guid>https://limboy.me/posts/twitter2weibo/</guid>
            <description>&lt;p&gt;我不用新浪微博，有好友想要此功能，于是就上网看了下有没有现成的，果然有一个&lt;a href=&quot;http:&#x2F;&#x2F;iamsure.org&#x2F;archives&#x2F;169&quot;&gt;twitter2weibo 的 php 脚本&lt;&#x2F;a&gt;，但打开一看还是基于 Basic Auth 的，自然不能用，只能自己写一个了。(发布新浪微博部分，借鉴了原先的 twitter2weibo)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shi-yong-shuo-ming&quot;&gt;使用说明&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;打开 config.php，在里面填入一组或多组信息(twitter_username&#x2F;sina_email&#x2F;sina_pwd)&lt;&#x2F;li&gt;
&lt;li&gt;在当前目录下新建一个 data 文件夹，并设置为可写入&lt;&#x2F;li&gt;
&lt;li&gt;设置 cron 为每 3 分钟执行一次脚本&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;crontab&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt; -e
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;*&#x2F;3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;* * * *&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt; php &#x2F;path&#x2F;to&#x2F;twitter2weibo.php
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以先试运行一下看看是否正常&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xin-jia-de-te-xing&quot;&gt;新加的特性&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;支持多用户(在 config.php 里配置)&lt;&#x2F;li&gt;
&lt;li&gt;多线程同步(只支持 linux)。如果是 windows 主机，可以去掉 pcntl_fork 方法，直接调用 sync 方法&lt;&#x2F;li&gt;
&lt;li&gt;保存用户 cookie，避免多次读取&lt;&#x2F;li&gt;
&lt;li&gt;用户删除某条&#x2F;某些 tweet 后，不会出现异常同步&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;xia-zai&quot;&gt;下载&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;twitter2weibo&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;twitter2weibo&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</description>
        </item>
        
        
        <item>
            <title>写了一款php日志系统——plog</title>
            <pubDate>Mon, 06 Dec 2010 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/plog/</link>
            <guid>https://limboy.me/posts/plog/</guid>
            <description>&lt;p&gt;日志是一个应用程序的重要组成部分，今天在看 pylons 对日志的处理时，受到启发，于是 plog 就诞生了。&lt;&#x2F;p&gt;
&lt;p&gt;很多 php 框架都忽略了日志的重要性(如 kohana)，往往只是能用，自定义和可扩展性不够，等到程序出了问题，再想找原因时就比较麻烦了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;plog-jian-jie&quot;&gt;plog 简介&lt;&#x2F;h3&gt;
&lt;p&gt;plog 是一款轻量级，易定制，易使用，易扩展的 php 日志系统。可以很方便地添加日志处理工具、自定义输出格式、自定义日志类型等等。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;plog-shi-yong&quot;&gt;plog 使用&lt;&#x2F;h3&gt;
&lt;p&gt;使用 plog 很简单，在每个要加日志的文件里，输入以下代码&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 载入plog类
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;require &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;..&#x2F;..&#x2F;plog&#x2F;classes&#x2F;plog.php&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 设置config，config文件位置可以自定义
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 对于单入口文件，这两段代码可以放在入口文件处
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Plog&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;set_config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;path&#x2F;to&#x2F;config.php&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 把下面这段代码放到对应的文件里
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$log &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Plog&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;factory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;__FILE__&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 使用
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;debug&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;this is debug message&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;this is info message&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;{{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;&amp;lt; &#x2F; &lt;&#x2F;span&gt;&lt;span&gt;highlight &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;}}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;### plog的配置
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;plog的配置很灵活，下面是个demo config
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span&gt;highlight php &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;}}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;?php
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 设置日志的类型，如有些是系统日志，有些是应用日志
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;loggers&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; base是个特殊变量，会自动添加到其他配置的前面
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;base&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;dirname(dirname(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;__FILE__&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;DIRECTORY_SEPARATOR&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;demo&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;DIRECTORY_SEPARATOR&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;system&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;system&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; key为日志类型，value为文件夹路径，base路径会被自动添加
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;app&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;app&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 同上
&lt;&#x2F;span&gt;&lt;span&gt;	),
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 日志的等级
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;levels&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;DEBUG&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;INFO&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;ERROR&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;WARN&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;FATAL&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 日志处理工具，可以添加多个，设置enabled为true表示已启用
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;handlers&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;file&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 处理引擎
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;driver&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;file&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 记录哪种类型的日志
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;level&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;DEBUG&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 日志格式，可以在formatters处添加
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;formatter&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;generic&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 是否启用该引擎
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;enabled&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 针对该handler的特处配置
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;config&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;dir&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;dirname(dirname(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;__FILE__&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;&#x2F;demo&#x2F;var&#x2F;log&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			),
&lt;&#x2F;span&gt;&lt;span&gt;		),
&lt;&#x2F;span&gt;&lt;span&gt;	),
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F; 日志格式
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;formatters&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;generic&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;{time} {level} [{logger}] {uri} &amp;quot;&amp;quot;&amp;quot;{message}&amp;quot;&amp;quot;&amp;quot;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	),
&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;ji-dian-shuo-ming&quot;&gt;几点说明&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;levels 项，每一个值都是一个方法，不过是小写的，如$log-&amp;gt;debug(&#x27;message&#x27;)。如果某个方法不在这些 levels 里会触发异常。&lt;&#x2F;li&gt;
&lt;li&gt;日志格式的可选变量在 plog&#x2F;formatter.php 里，每一个 get 开头的方法就是，如果觉得不够用，可以自己添加。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ri-zhi-nei-rong&quot;&gt;日志内容&lt;&#x2F;h3&gt;
&lt;p&gt;日志内容取决于日志格式，下面是 demo&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;2010&#x2F;12&#x2F;07&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt; 16:00:26 DEBUG &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;app.test&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt; &#x2F;projects&#x2F;os&#x2F;plog&#x2F;demo&#x2F;app&#x2F;test.php&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;id=1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;hello world&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;2010&#x2F;12&#x2F;07&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt; 16:00:26 INFO &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;app.test&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt; &#x2F;projects&#x2F;os&#x2F;plog&#x2F;demo&#x2F;app&#x2F;test.php&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;id=1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;今晚打老虎&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;2010&#x2F;12&#x2F;07&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt; 16:01:17 DEBUG &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;system.core&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt; &#x2F;projects&#x2F;os&#x2F;plog&#x2F;demo&#x2F;system&#x2F;core.php&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;_profiler=1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;heal the world&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;2010&#x2F;12&#x2F;07&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt; 16:37:29 DEBUG &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;system.core&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt; &#x2F;projects&#x2F;os&#x2F;plog&#x2F;demo&#x2F;system&#x2F;core.php&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;_profiler=1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;heal the world&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;xia-zai&quot;&gt;下载&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;plog&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;plog&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</description>
        </item>
        
        
        <item>
            <title>写了一款REST框架——RESTY</title>
            <pubDate>Sat, 04 Dec 2010 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/resty/</link>
            <guid>https://limboy.me/posts/resty/</guid>
            <description>&lt;p&gt;关于 REST 的介绍可以参考&lt;a href=&quot;http:&#x2F;&#x2F;blog.leezhong.com&#x2F;tech&#x2F;2010&#x2F;11&#x2F;14&#x2F;rest.html&quot;&gt;我之前的文章&lt;&#x2F;a&gt;，总体说来，REST 是 web 发展的趋势，而 PHP 是 web 开发的利器，但我找了一遍，只找到了两个 PHP REST 框架(不包括那些以 MVC 为核心，同时又支持 REST 的框架)，一个是&lt;a href=&quot;http:&#x2F;&#x2F;peej.github.com&#x2F;tonic&#x2F;&quot;&gt;Tonic&lt;&#x2F;a&gt;，架构理念我比较认同，但代码质量实在不敢恭维。还有一个是&lt;a href=&quot;http:&#x2F;&#x2F;www.recessframework.org&#x2F;&quot;&gt;Recess&lt;&#x2F;a&gt;，在我看来，它有点复杂化了，把不该 rest 做的事也做了。在这种情况下，我只能自己动手，丰衣足食了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;resty-jian-jie&quot;&gt;RESTY 简介&lt;&#x2F;h3&gt;
&lt;p&gt;RESTY 的流程很简单，获取 Request 单例，然后执行 exec 方法，该方法里会调用 Route 来解析 URI 获取相应的 Resource，然后实例化 Resource，触发相应的 HTTP 方法，最后返回一个 Response 对象，Response 执行 output 方法就输出了结果。听起来好像一点都不简单，哈哈，还是来大概看一下代码吧&lt;&#x2F;p&gt;
&lt;p&gt;index.php&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;try &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Request&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;instance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;output&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;catch&lt;&#x2F;span&gt;&lt;span&gt; (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Route_Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$e&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Response&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;instance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;set_status&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;404&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;set_body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(array(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;error&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;Resource Not Found&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;Request&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$_SERVER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;REQUEST_URI&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;],
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;		))
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;output&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;		;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;request.php&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;public function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$class_name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;Resource_&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;str_replace(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;&#x2F;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;_&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;get_resource&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;ReflectionClass&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$class_name&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$resource &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;newInstance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;getMethod&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;before&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;invoke&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$resource&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;getMethod&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;request_method&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;invoke&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$resource&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;getMethod&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;after&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;invoke&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$resource&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$response &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Response&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;instance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$response&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;set_body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$resource&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;get_data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$response&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;response.php&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;public function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;output&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;_content_encoding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;header(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;Content-type:application&#x2F;json;charset=utf-8&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;header(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;Status:&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;_status&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39; &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;_messages&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;_status&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;])&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;header(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;Content-Length: &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;strlen(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;_body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;foreach&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;_header &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$val&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	{
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;header(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;:&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	}
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;_body&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;resty-te-xing&quot;&gt;RESTY 特性&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;qing-liang-ji&quot;&gt;轻量级&lt;&#x2F;h3&gt;
&lt;p&gt;RESTY 包含了核心的 Request&#x2F;Resource&#x2F;Response&#x2F;Route&#x2F;Config&#x2F;Validation 功能，没有其他多余的部件，如 Controller&#x2F;View 等等，很纯粹。一个工具应该把一件事做好，同时提供接口，这也是 RESTY 的哲学。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shi-yong-fang-bian&quot;&gt;使用方便&lt;&#x2F;h3&gt;
&lt;p&gt;使用时，只需定义好 uri 对应的 Resource，然后编写 Resource 就行了，其他的事 RESTY 会帮你搞定。&lt;&#x2F;p&gt;
&lt;p&gt;config&#x2F;resource.php demo&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;&#x2F;example&#x2F;(?&amp;lt;id&amp;gt;[0-9]+)&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;example&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;&#x2F;example&#x2F;foo&#x2F;(?&amp;lt;name&amp;gt;[a-zA-Z_0-9]+)&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;example&#x2F;foo&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以看到 uri 支持正则，没错，原生的 php 正则。resource 部分对应 resource 文件的路径(不包括后缀)&lt;&#x2F;p&gt;
&lt;p&gt;resource&#x2F;example.php&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Resource_Example &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;Resource
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;public function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	{
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;* set etag
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;		Response::instance()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;			-&amp;gt;if_none_match(md5(&amp;#39;hello&amp;#39;))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;			-&amp;gt;add_etag(md5(&amp;#39;hello&amp;#39;))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;			;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;		&#x2F;&#x2F;*&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;validate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		{
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;_data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;get_data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;		}
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;else
&lt;&#x2F;span&gt;&lt;span&gt;		{
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;_data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;error&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;implode(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;,&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;getErrors&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;request&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$_SERVER&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;REQUEST_URI&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]);
&lt;&#x2F;span&gt;&lt;span&gt;		}
&lt;&#x2F;span&gt;&lt;span&gt;	}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;public function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;post&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	{
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;_data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array_merge(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;$this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c82728;&quot;&gt;get_data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;(), array(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;type&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;post&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;每一个资源对应 4 个 http 方法。RESTY 还很贴心地提供了 Validation 部件(基本上是直接从 Kohana 中 K 过来的)，方便对数据进行校验。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;yi-kuo-zhan&quot;&gt;易扩展&lt;&#x2F;h3&gt;
&lt;p&gt;system&#x2F;classes 文件夹下的类文件，都可以在 app&#x2F;classes 文件夹下扩展，而且使用时不用做任何修改。假设你之前已经写了不少 Resource，忽然想到要扩展系统的 Resource 类，正常的做法是定义一个 MY_Resource 之类的类文件来扩展系统的 Resource 类，然后使用时使用 MY_Resource 而不是 Resource。但这样就会有个问题，之前使用的 Resource 类都要做修改了，可谓牵一发而动全身。RESTY 就方便了，同样要扩展 Resource 类，只要在 app&#x2F;classes 下新建一个 resource.php 文件，然后扩展 Resty_Resource 类即可。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c99e00;&quot;&gt;Resource &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;Resty_Resource
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;public function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;foo&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	{
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8e908c;&quot;&gt;&#x2F;&#x2F;...
&lt;&#x2F;span&gt;&lt;span&gt;	}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样使用时还是一样的 Resource 类，但却多了 foo 方法。这也是从 Kohana 学到的无缝扩展大法（题外话：Kohana 真是个不错的框架，各位不妨一试）。原理就是在类自动加载时会先去 app&#x2F;classes 文件夹下去找，如果没找到的话再去 system&#x2F;classes 下找。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;yan-zheng-gong-neng&quot;&gt;验证功能&lt;&#x2F;h3&gt;
&lt;p&gt;作为一个比较完整的 REST 框架，Validation 还是不能少的，为了不重复制造轮子，直接把 Kohana 的验证类搬了过来，稍作修改。&lt;&#x2F;p&gt;
&lt;p&gt;配置：config&#x2F;validation.php&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;example&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;get&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;filters&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;id&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;					&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;trim&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;				),
&lt;&#x2F;span&gt;&lt;span&gt;			),
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;rules&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;id&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;					&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;not_empty&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;					&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;min_length&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;span&gt;					&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;digit&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;				),
&lt;&#x2F;span&gt;&lt;span&gt;			),
&lt;&#x2F;span&gt;&lt;span&gt;		),
&lt;&#x2F;span&gt;&lt;span&gt;	),
&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;错误提示：config&#x2F;message.php&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span style=&quot;color:#f07219;&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8959a8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;example&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;id&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4271ae;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;digit&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;id必须是数字&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;not_empty&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;id不能为空&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;min_length&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#3e999f;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839c00;&quot;&gt;&amp;#39;id长度至少为:value&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;		),
&lt;&#x2F;span&gt;&lt;span&gt;	),
&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;config-gong-neng&quot;&gt;Config 功能&lt;&#x2F;h3&gt;
&lt;p&gt;config 文件如上面所示，就是返回一个数组。使用也很简单:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#f9f9f9;color:#111111;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span&gt;&#x2F;&#x2F; 获取config&#x2F;message.php文件的example key对应的内容
&lt;&#x2F;span&gt;&lt;span&gt;Config::get(&amp;#39;message.example&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; 设置config(不会写入到文件，只在一个http request有效)
&lt;&#x2F;span&gt;&lt;span&gt;Config::set(&amp;#39;message.example.id.digit&amp;#39;, &amp;#39;id can be anything&amp;#39;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;xia-zai&quot;&gt;下载&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;resty&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;resty&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;欢迎使用，并反馈:)&lt;&#x2F;p&gt;
</description>
        </item>
        
        
        <item>
            <title>写了一款个人知识管理(PKM)工具</title>
            <pubDate>Sun, 14 Nov 2010 00:00:00 +0000</pubDate>
            <link>https://limboy.me/posts/pkm/</link>
            <guid>https://limboy.me/posts/pkm/</guid>
            <description>&lt;p&gt;看了不少知识管理方面的文章，如&amp;quot;&lt;a href=&#x27;http:&#x2F;&#x2F;www.williamlong.info&#x2F;archives&#x2F;2176.html&#x27;&gt;月光博客——我的个人知识管理工具软件&lt;&#x2F;a&gt;&amp;quot;，&amp;quot;&lt;a href=&#x27;http:&#x2F;&#x2F;www.zreading.cn&#x2F;archives&#x2F;1861.html&#x27;&gt;左岸读书——个人知识管理&lt;&#x2F;a&gt;&amp;quot;，里面提到了一些工具，如思维导图、OneNote、Vimwiki 等等，都有各自的特点。但都不能做到：举一反三，将知识通过标签串联起来。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;b&gt;标签就好像网的结点。&lt;&#x2F;b&gt;知识点之间不是独立的，它们的连接方式就是标签。如《追风筝的人》这本书和《盗梦空间》这部电影看起来没有什么交集，很难联系到一块，其实不然，有一个标签就可以：盗窃。而《盗梦空间》又和&amp;quot;梦&amp;quot;有关，所以又与《穆赫兰道》联系到了一起。这样就很少会有散落的知识点，而知识点一旦被孤立，就很难再被想起来，时间一长就很自然地把它忘了。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;左边的标签云是所有知识点的标签，按数量从多到少排列。&lt;&#x2F;li&gt;
&lt;li&gt;点击一个标签会列出该标签关联的所有知识点。&lt;&#x2F;li&gt;
&lt;li&gt;点击标题会显示文章内容，同时会列出该文章的所有标签，并且列出这些标签关联的文章。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;源码下载：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;pkm&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;limboy&#x2F;pkm&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</description>
        </item>
        
    </channel>
</rss>